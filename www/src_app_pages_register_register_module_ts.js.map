{"version":3,"file":"src_app_pages_register_register_module_ts.js","mappings":"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","sources":["./src/app/pages/register/register-routing.module.ts","./src/app/pages/register/register.module.ts","./src/app/pages/register/register.page.ts","./src/app/pages/register/register.page.html","./src/app/services/api.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ToastController } from '@ionic/angular'; // Importa ToastController\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  @ViewChild('registerForm') registerForm!: NgForm;\r\n  tipo_usuario = false;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private toastController: ToastController // Inyecta ToastController\r\n\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n  \r\n  updateTipoLabel() {\r\n    const tipoLabel = document.getElementById('tipo_label') as HTMLLabelElement;\r\n    tipoLabel.textContent = this.tipo_usuario ? 'Vendedor' : 'Comprador';\r\n  }\r\n\r\n  onRegister(form: NgForm) {\r\n    const formData = new FormData();\r\n\r\n    const jsonData = {\r\n      usuario: form.value.usuario,\r\n      boleta: form.value.boleta,\r\n      password: form.value.password,\r\n      password_conf: form.value.password_conf,\r\n      email: form.value.email,\r\n      tipo_usuario: this.tipo_usuario ? 'vendedor' : 'comprador'\r\n    };\r\n\r\n    // Envía los datos al backend\r\n    this.apiService.register(jsonData).subscribe(\r\n      async (response: any) => { // Especifica el tipo de respuesta como any\r\n        console.log('Respuesta del registro:', response);\r\n\r\n        const toast = await this.toastController.create({\r\n          message: response, // Muestra el mensaje de respuesta en el toast\r\n          duration: 2000,\r\n          position: 'top'\r\n        });\r\n        toast.present();\r\n\r\n        // Realiza el inicio de sesión automático\r\n        this.apiService.login(form.value.boleta, form.value.password).subscribe(\r\n          (loginResponse) => {\r\n            localStorage.setItem('currentUser', JSON.stringify(loginResponse));\r\n            const currentUserString = localStorage.getItem('currentUser');\r\n            if (currentUserString !== null) {\r\n              this.authService.setCurrentUser(JSON.parse(currentUserString));\r\n              this.authService.setLoggedIn(true);\r\n            }\r\n            this.router.navigate(['/']);\r\n          },\r\n          (error) => {\r\n            console.error('Error al iniciar sesión después del registro:', error);\r\n          }\r\n        );\r\n      },\r\n      async (error) => {\r\n        console.error('Error al registrar:', error);\r\n\r\n        const toast = await this.toastController.create({\r\n          message: error.error, // Muestra el mensaje de error en el toast\r\n          duration: 2000,\r\n          position: 'top'\r\n        });\r\n        toast.present();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ion-content color=\"light\" class=\"ion-padding\">\r\n  <br>\r\n       <ion-icon size=\"large\" name=\"arrow-back\" routerLink=\"/\"></ion-icon>\r\n   <br>\r\n       <h2 size=\"large\"><b>Registrarse</b></h2>\r\n\r\n  <form #registerForm=\"ngForm\" (ngSubmit)=\"onRegister(registerForm)\">\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label type=\"text\" position=\"stacked\">Nombre*</ion-label>\r\n      <ion-input type=\"text\" ngModel name=\"usuario\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label position=\"stacked\">Boleta*</ion-label>\r\n      <ion-input type=\"text\" ngModel name=\"boleta\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label position=\"stacked\">Correo electrónico*</ion-label>\r\n      <ion-input type=\"email\" ngModel name=\"email\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label position=\"stacked\">Contraseña*</ion-label>\r\n      <ion-input type=\"password\" ngModel name=\"password\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label position=\"stacked\">Confirmar contraseña*</ion-label>\r\n      <ion-input type=\"password\" ngModel name=\"password_conf\" required></ion-input>\r\n    </ion-item>\r\n\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label position=\"stacked\">Tipo de cuenta</ion-label>\r\n      <ion-toggle [(ngModel)]=\"tipo_usuario\" name=\"tipo_usuario\" (ionChange)=\"updateTipoLabel()\"></ion-toggle>\r\n      <ion-label id=\"tipo_label\">Comprador</ion-label>\r\n    </ion-item>\r\n\r\n    <br>\r\n    <ion-button color=\"dark\" shape=\"round\" expand=\"block\" type=\"submit\" [disabled]=\"!registerForm.valid\">\r\n      Registrar &nbsp;<ion-icon name=\"arrow-forward\"></ion-icon>\r\n    </ion-button>\r\n  </form>\r\n    </ion-content>\r\n ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Order, Product } from '../components/order-card/order-card.component';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private api = environment.api;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private toastController: ToastController,\r\n    private router:Router\r\n  ) { }\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\r\n    const token = currentUser && currentUser.token ? currentUser.token : ''; // Obtiene el token de localStorage\r\n\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` // Incluye el token en el encabezado Authorization\r\n    });\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const url = this.api + '/login';\r\n    const body = { boleta: username, password: password };\r\n    return this.http.post(url, body, { observe: 'response', withCredentials: true }) // Observa la respuesta completa\r\n      .pipe(\r\n        map((response: HttpResponse<any>) => response.body),\r\n        catchError(async error => {\r\n          console.error('Error en el inicio de sesión:', error);\r\n\r\n          // Muestra el mensaje de error en un toast\r\n          const toast = await this.toastController.create({\r\n            message: error.error,\r\n            duration: 2000,\r\n            position: 'top'\r\n          });\r\n          toast.present()\r\n\r\n          return throwError(() => new Error(error)); // Propaga el error para manejarlo en el componente\r\n        })\r\n      );\r\n  }\r\n\r\n  logout(): Observable<string> {\r\n    const url = this.api + '/login'; // Endpoint de cierre de sesión\r\n    return this.http.delete(url, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  verifySession(): Observable<any> {\r\n    const url = this.api + '/login/verify';\r\n    return this.http.get(url, { withCredentials: true }) // withCredentials: true para enviar cookies\r\n      .pipe(\r\n        map((response: any) => response),\r\n        catchError(error => {\r\n          if (error.status === 401) {\r\n            // Si no está autenticado, redirigir a la página de inicio de sesión\r\n            this.router.navigate(['/login']); // Redirige al login en caso de error 401\r\n            return of(null);\r\n          } else {\r\n            console.error('Error al verificar la sesión:', error);\r\n            return throwError(() => new Error(error));\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  products(): Observable<any>{\r\n    const url = this.api + '/products/data';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProducts(page: number): Observable<any[]> { // Método para obtener productos sin búsqueda\r\n    const params = new HttpParams().set('page', page.toString());\r\n    const url = this.api + '/products/data';\r\n    return this.http.get<any[]>(url, { params });\r\n  }\r\n\r\n  searchProducts(page: number, query: string): Observable<any[]> { // Método para buscar productos\r\n    const params = new HttpParams().set('page', page.toString()).set('query', query);\r\n    const url = this.api + '/products/search';\r\n    return this.http.get<any[]>(url, { params });\r\n  }\r\n\r\n  \r\n  productDetails(id: string): Observable<any>{\r\n    const url = this.api + '/products/data/' + id;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  register(jsonData: any): Observable<string> {\r\n    const url = this.api + '/verify/registration';\r\n    return this.http.post(url, jsonData, { headers: this.getHeaders(), observe: 'response', responseType: 'text' }) // Incluye los encabezados\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  createOrder(orderData: any): Observable<string> {\r\n    const url = this.api + '/pedidos';\r\n    return this.http.post(url, orderData, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true }) // Incluye los encabezados\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    const url = this.api + '/pedidos';\r\n    return this.http.get<Order[]>(url, { withCredentials: true }); \r\n  }\r\n\r\n  getSales(): Observable<Order[]> {\r\n    const url = this.api + '/pedidos/sales';\r\n    return this.http.get<Order[]>(url, { withCredentials: true });\r\n  }\r\n\r\n  getInventory(): Observable<any[]> {\r\n    const url = this.api + '/products/seller/data';\r\n    return this.http.get<Product[]>(url, { withCredentials: true });\r\n  }\r\n\r\n  updateOrderStatus(orderId: string, productId: number, newStatus: string): Observable<string> {\r\n    const url = this.api + `/pedidos/${orderId}`; // URL con el ID del pedido\r\n    const body = { estado: newStatus, id_producto: productId }; // Datos en formato JSON\r\n\r\n    return this.http.patch(url, body, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProduct(productId: number, formData: FormData): Observable<any> {\r\n    const url = this.api + `/products/seller/data/${productId}`;\r\n    return this.http.patch(url, formData, { observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  createProduct(formData: FormData): Observable<any> {\r\n    const url = this.api + `/products/seller`;\r\n    return this.http.post(url, formData, { observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteProduct(productId: number): Observable<any> {\r\n    const url = this.api + `/products/seller/${productId}`;\r\n    return this.http.delete(url, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProductAvailability(productId: number, availability: boolean): Observable<any> {\r\n    const url = this.api + `/products/seller/avail/${productId}`;\r\n    return this.http.patch(url, { disponibilidad: availability }, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  getProductImage(image: string | null, placeholder: boolean): string {\r\n    const backend_url = this.api + `/images/products/${image}`;\r\n    const generic_url_seed ='https://picsum.photos/seed';\r\n    const generic_url = 'https://picsum.photos/256'\r\n\r\n    if (image && !placeholder) {\r\n      return backend_url;\r\n    } else if (placeholder) {\r\n      return `${generic_url_seed}/${image}/256`;\r\n    } else {\r\n      return generic_url;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}"],"names":["RouterModule","RegisterPage","routes","path","component","RegisterPageRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","IonicModule","RegisterPageModule","declarations","constructor","apiService","router","authService","toastController","tipo_usuario","ngOnInit","updateTipoLabel","tipoLabel","document","getElementById","textContent","onRegister","form","_this","formData","FormData","jsonData","usuario","value","boleta","password","password_conf","email","register","subscribe","_ref","_asyncToGenerator","response","console","log","toast","create","message","duration","position","present","login","loginResponse","localStorage","setItem","JSON","stringify","currentUserString","getItem","setCurrentUser","parse","setLoggedIn","navigate","error","_x","apply","arguments","_ref2","_x2","i0","ɵɵdirectiveInject","ApiService","i2","Router","i3","AuthService","i4","ToastController","selectors","viewQuery","RegisterPage_Query","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterPage_Template_form_ngSubmit_7_listener","ɵɵrestoreView","_r1","registerForm_r2","ɵɵreference","ɵɵresetView","ɵɵtwoWayListener","RegisterPage_Template_ion_toggle_ngModelChange_32_listener","$event","ɵɵtwoWayBindingSet","RegisterPage_Template_ion_toggle_ionChange_32_listener","ɵɵadvance","ɵɵtwoWayProperty","ɵɵproperty","valid","HttpHeaders","HttpParams","of","throwError","catchError","map","environment","http","api","getHeaders","currentUser","token","username","url","body","post","observe","withCredentials","pipe","Error","logout","delete","headers","responseType","verifySession","get","status","products","getProducts","page","params","set","toString","searchProducts","query","productDetails","id","createOrder","orderData","getOrders","getSales","getInventory","updateOrderStatus","orderId","productId","newStatus","estado","id_producto","patch","updateProduct","createProduct","deleteProduct","updateProductAvailability","availability","disponibilidad","getProductImage","image","placeholder","backend_url","generic_url_seed","generic_url","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}