{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, d as createEvent, w as writeTask, h, f as Host, i as getElement, j as forceUpdate } from './index-8d8c14b0.js';\r\nimport { r as raf, a as addEventListener, b as removeEventListener, h as inheritAttributes } from './helpers-da915de8.js';\r\nimport { i as isRTL } from './dir-babeabeb.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-01f3f29c.js';\r\nimport { b as getIonMode } from './ionic-global-8180d812.js';\r\n\r\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;width:auto}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\r\nconst IonSegmentIosStyle0 = segmentIosCss;\r\n\r\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent;grid-auto-columns:minmax(auto, 360px)}:host(.in-toolbar){min-height:var(--min-height)}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\r\nconst IonSegmentMdStyle0 = segmentMdCss;\r\n\r\nconst Segment = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n        this.onClick = (ev) => {\r\n            const current = ev.target;\r\n            const previous = this.checked;\r\n            // If the current element is a segment then that means\r\n            // the user tried to swipe to a segment button and\r\n            // click a segment button at the same time so we should\r\n            // not update the checked segment button\r\n            if (current.tagName === 'ION-SEGMENT') {\r\n                return;\r\n            }\r\n            this.value = current.value;\r\n            if (current !== previous) {\r\n                this.emitValueChange();\r\n            }\r\n            if (this.scrollable || !this.swipeGesture) {\r\n                if (previous) {\r\n                    this.checkButton(previous, current);\r\n                }\r\n                else {\r\n                    this.setCheckedClasses();\r\n                }\r\n            }\r\n        };\r\n        this.onSlottedItemsChange = () => {\r\n            /**\r\n             * When the slotted segment buttons change we need to\r\n             * ensure that the new segment buttons are checked if\r\n             * the value matches the segment button value.\r\n             */\r\n            this.valueChanged(this.value);\r\n        };\r\n        this.getSegmentButton = (selector) => {\r\n            var _a, _b;\r\n            const buttons = this.getButtons().filter((button) => !button.disabled);\r\n            const currIndex = buttons.findIndex((button) => button === document.activeElement);\r\n            switch (selector) {\r\n                case 'first':\r\n                    return buttons[0];\r\n                case 'last':\r\n                    return buttons[buttons.length - 1];\r\n                case 'next':\r\n                    return (_a = buttons[currIndex + 1]) !== null && _a !== void 0 ? _a : buttons[0];\r\n                case 'previous':\r\n                    return (_b = buttons[currIndex - 1]) !== null && _b !== void 0 ? _b : buttons[buttons.length - 1];\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n        this.activated = false;\r\n        this.color = undefined;\r\n        this.disabled = false;\r\n        this.scrollable = false;\r\n        this.swipeGesture = true;\r\n        this.value = undefined;\r\n        this.selectOnFocus = false;\r\n    }\r\n    colorChanged(value, oldValue) {\r\n        /**\r\n         * If color is set after not having\r\n         * previously been set (or vice versa),\r\n         * we need to emit style so the segment-buttons\r\n         * can apply their color classes properly.\r\n         */\r\n        if ((oldValue === undefined && value !== undefined) || (oldValue !== undefined && value === undefined)) {\r\n            this.emitStyle();\r\n        }\r\n    }\r\n    swipeGestureChanged() {\r\n        this.gestureChanged();\r\n    }\r\n    valueChanged(value) {\r\n        /**\r\n         * `ionSelect` is emitted every time the value changes (internal or external changes).\r\n         * Used by `ion-segment-button` to determine if the button should be checked.\r\n         */\r\n        this.ionSelect.emit({ value });\r\n        this.scrollActiveButtonIntoView();\r\n    }\r\n    disabledChanged() {\r\n        this.gestureChanged();\r\n        const buttons = this.getButtons();\r\n        for (const button of buttons) {\r\n            button.disabled = this.disabled;\r\n        }\r\n    }\r\n    gestureChanged() {\r\n        if (this.gesture) {\r\n            this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this.emitStyle();\r\n    }\r\n    componentWillLoad() {\r\n        this.emitStyle();\r\n    }\r\n    async componentDidLoad() {\r\n        this.setCheckedClasses();\r\n        /**\r\n         * We need to wait for the buttons to all be rendered\r\n         * before we can scroll.\r\n         */\r\n        raf(() => {\r\n            /**\r\n             * When the segment loads for the first\r\n             * time we just want to snap the active button into\r\n             * place instead of scroll. Smooth scrolling should only\r\n             * happen when the user interacts with the segment.\r\n             */\r\n            this.scrollActiveButtonIntoView(false);\r\n        });\r\n        this.gesture = (await import('./index-39782642.js')).createGesture({\r\n            el: this.el,\r\n            gestureName: 'segment',\r\n            gesturePriority: 100,\r\n            threshold: 0,\r\n            passive: false,\r\n            onStart: (ev) => this.onStart(ev),\r\n            onMove: (ev) => this.onMove(ev),\r\n            onEnd: (ev) => this.onEnd(ev),\r\n        });\r\n        this.gestureChanged();\r\n        if (this.disabled) {\r\n            this.disabledChanged();\r\n        }\r\n    }\r\n    onStart(detail) {\r\n        this.valueBeforeGesture = this.value;\r\n        this.activate(detail);\r\n    }\r\n    onMove(detail) {\r\n        this.setNextIndex(detail);\r\n    }\r\n    onEnd(detail) {\r\n        this.setActivated(false);\r\n        this.setNextIndex(detail, true);\r\n        detail.event.stopImmediatePropagation();\r\n        const value = this.value;\r\n        if (value !== undefined) {\r\n            if (this.valueBeforeGesture !== value) {\r\n                this.emitValueChange();\r\n            }\r\n        }\r\n        this.valueBeforeGesture = undefined;\r\n    }\r\n    /**\r\n     * Emits an `ionChange` event.\r\n     *\r\n     * This API should be called for user committed changes.\r\n     * This API should not be used for external value changes.\r\n     */\r\n    emitValueChange() {\r\n        const { value } = this;\r\n        this.ionChange.emit({ value });\r\n    }\r\n    getButtons() {\r\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\r\n    }\r\n    get checked() {\r\n        return this.getButtons().find((button) => button.value === this.value);\r\n    }\r\n    /*\r\n     * Activate both the segment and the buttons\r\n     * due to a bug with ::slotted in Safari\r\n     */\r\n    setActivated(activated) {\r\n        const buttons = this.getButtons();\r\n        buttons.forEach((button) => {\r\n            if (activated) {\r\n                button.classList.add('segment-button-activated');\r\n            }\r\n            else {\r\n                button.classList.remove('segment-button-activated');\r\n            }\r\n        });\r\n        this.activated = activated;\r\n    }\r\n    activate(detail) {\r\n        const clicked = detail.event.target;\r\n        const buttons = this.getButtons();\r\n        const checked = buttons.find((button) => button.value === this.value);\r\n        // Make sure we are only checking for activation on a segment button\r\n        // since disabled buttons will get the click on the segment\r\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\r\n            return;\r\n        }\r\n        // If there are no checked buttons, set the current button to checked\r\n        if (!checked) {\r\n            this.value = clicked.value;\r\n            this.setCheckedClasses();\r\n        }\r\n        // If the gesture began on the clicked button with the indicator\r\n        // then we should activate the indicator\r\n        if (this.value === clicked.value) {\r\n            this.setActivated(true);\r\n        }\r\n    }\r\n    getIndicator(button) {\r\n        const root = button.shadowRoot || button;\r\n        return root.querySelector('.segment-button-indicator');\r\n    }\r\n    checkButton(previous, current) {\r\n        const previousIndicator = this.getIndicator(previous);\r\n        const currentIndicator = this.getIndicator(current);\r\n        if (previousIndicator === null || currentIndicator === null) {\r\n            return;\r\n        }\r\n        const previousClientRect = previousIndicator.getBoundingClientRect();\r\n        const currentClientRect = currentIndicator.getBoundingClientRect();\r\n        const widthDelta = previousClientRect.width / currentClientRect.width;\r\n        const xPosition = previousClientRect.left - currentClientRect.left;\r\n        // Scale the indicator width to match the previous indicator width\r\n        // and translate it on top of the previous indicator\r\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\r\n        writeTask(() => {\r\n            // Remove the transition before positioning on top of the previous indicator\r\n            currentIndicator.classList.remove('segment-button-indicator-animated');\r\n            currentIndicator.style.setProperty('transform', transform);\r\n            // Force a repaint to ensure the transform happens\r\n            currentIndicator.getBoundingClientRect();\r\n            // Add the transition to move the indicator into place\r\n            currentIndicator.classList.add('segment-button-indicator-animated');\r\n            // Remove the transform to slide the indicator back to the button clicked\r\n            currentIndicator.style.setProperty('transform', '');\r\n        });\r\n        this.value = current.value;\r\n        this.setCheckedClasses();\r\n    }\r\n    setCheckedClasses() {\r\n        const buttons = this.getButtons();\r\n        const index = buttons.findIndex((button) => button.value === this.value);\r\n        const next = index + 1;\r\n        for (const button of buttons) {\r\n            button.classList.remove('segment-button-after-checked');\r\n        }\r\n        if (next < buttons.length) {\r\n            buttons[next].classList.add('segment-button-after-checked');\r\n        }\r\n    }\r\n    scrollActiveButtonIntoView(smoothScroll = true) {\r\n        const { scrollable, value, el } = this;\r\n        if (scrollable) {\r\n            const buttons = this.getButtons();\r\n            const activeButton = buttons.find((button) => button.value === value);\r\n            if (activeButton !== undefined) {\r\n                const scrollContainerBox = el.getBoundingClientRect();\r\n                const activeButtonBox = activeButton.getBoundingClientRect();\r\n                /**\r\n                 * Subtract the active button x position from the scroll\r\n                 * container x position. This will give us the x position\r\n                 * of the active button within the scroll container.\r\n                 */\r\n                const activeButtonLeft = activeButtonBox.x - scrollContainerBox.x;\r\n                /**\r\n                 * If we just used activeButtonLeft, then the active button\r\n                 * would be aligned with the left edge of the scroll container.\r\n                 * Instead, we want the segment button to be centered. As a result,\r\n                 * we subtract half of the scroll container width. This will position\r\n                 * the left edge of the active button at the midpoint of the scroll container.\r\n                 * We then add half of the active button width. This will position the active\r\n                 * button such that the midpoint of the active button is at the midpoint of the\r\n                 * scroll container.\r\n                 */\r\n                const centeredX = activeButtonLeft - scrollContainerBox.width / 2 + activeButtonBox.width / 2;\r\n                /**\r\n                 * We intentionally use scrollBy here instead of scrollIntoView\r\n                 * to avoid a WebKit bug where accelerated animations break\r\n                 * when using scrollIntoView. Using scrollIntoView will cause the\r\n                 * segment container to jump during the transition and then snap into place.\r\n                 * This is because scrollIntoView can potentially cause parent element\r\n                 * containers to also scroll. scrollBy does not have this same behavior, so\r\n                 * we use this API instead.\r\n                 *\r\n                 * Note that if there is not enough scrolling space to center the element\r\n                 * within the scroll container, the browser will attempt\r\n                 * to center by as much as it can.\r\n                 */\r\n                el.scrollBy({\r\n                    top: 0,\r\n                    left: centeredX,\r\n                    behavior: smoothScroll ? 'smooth' : 'instant',\r\n                });\r\n            }\r\n        }\r\n    }\r\n    setNextIndex(detail, isEnd = false) {\r\n        const rtl = isRTL(this.el);\r\n        const activated = this.activated;\r\n        const buttons = this.getButtons();\r\n        const index = buttons.findIndex((button) => button.value === this.value);\r\n        const previous = buttons[index];\r\n        let current;\r\n        let nextIndex;\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        // Get the element that the touch event started on in case\r\n        // it was the checked button, then we will move the indicator\r\n        const rect = previous.getBoundingClientRect();\r\n        const left = rect.left;\r\n        const width = rect.width;\r\n        // Get the element that the gesture is on top of based on the currentX of the\r\n        // gesture event and the Y coordinate of the starting element, since the gesture\r\n        // can move up and down off of the segment\r\n        const currentX = detail.currentX;\r\n        const previousY = rect.top + rect.height / 2;\r\n        /**\r\n         * Segment can be used inside the shadow dom\r\n         * so doing document.elementFromPoint would never\r\n         * return a segment button in that instance.\r\n         * We use getRootNode to which will return the parent\r\n         * shadow root if used inside a shadow component and\r\n         * returns document otherwise.\r\n         */\r\n        const root = this.el.getRootNode();\r\n        const nextEl = root.elementFromPoint(currentX, previousY);\r\n        const decreaseIndex = rtl ? currentX > left + width : currentX < left;\r\n        const increaseIndex = rtl ? currentX < left : currentX > left + width;\r\n        // If the indicator is currently activated then we have started the gesture\r\n        // on top of the checked button so we need to slide the indicator\r\n        // by checking the button next to it as we move\r\n        if (activated && !isEnd) {\r\n            // Decrease index, move left in LTR & right in RTL\r\n            if (decreaseIndex) {\r\n                const newIndex = index - 1;\r\n                if (newIndex >= 0) {\r\n                    nextIndex = newIndex;\r\n                }\r\n                // Increase index, moves right in LTR & left in RTL\r\n            }\r\n            else if (increaseIndex) {\r\n                if (activated && !isEnd) {\r\n                    const newIndex = index + 1;\r\n                    if (newIndex < buttons.length) {\r\n                        nextIndex = newIndex;\r\n                    }\r\n                }\r\n            }\r\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\r\n                current = buttons[nextIndex];\r\n            }\r\n        }\r\n        // If the indicator is not activated then we will just set the indicator\r\n        // to the element where the gesture ended\r\n        if (!activated && isEnd) {\r\n            current = nextEl;\r\n        }\r\n        if (current != null) {\r\n            /**\r\n             * If current element is ion-segment then that means\r\n             * user tried to select a disabled ion-segment-button,\r\n             * and we should not update the ripple.\r\n             */\r\n            if (current.tagName === 'ION-SEGMENT') {\r\n                return false;\r\n            }\r\n            if (previous !== current) {\r\n                this.checkButton(previous, current);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            segment: true,\r\n        });\r\n    }\r\n    onKeyDown(ev) {\r\n        const rtl = isRTL(this.el);\r\n        let keyDownSelectsButton = this.selectOnFocus;\r\n        let current;\r\n        switch (ev.key) {\r\n            case 'ArrowRight':\r\n                ev.preventDefault();\r\n                current = rtl ? this.getSegmentButton('previous') : this.getSegmentButton('next');\r\n                break;\r\n            case 'ArrowLeft':\r\n                ev.preventDefault();\r\n                current = rtl ? this.getSegmentButton('next') : this.getSegmentButton('previous');\r\n                break;\r\n            case 'Home':\r\n                ev.preventDefault();\r\n                current = this.getSegmentButton('first');\r\n                break;\r\n            case 'End':\r\n                ev.preventDefault();\r\n                current = this.getSegmentButton('last');\r\n                break;\r\n            case ' ':\r\n            case 'Enter':\r\n                ev.preventDefault();\r\n                current = document.activeElement;\r\n                keyDownSelectsButton = true;\r\n        }\r\n        if (!current) {\r\n            return;\r\n        }\r\n        if (keyDownSelectsButton) {\r\n            const previous = this.checked;\r\n            this.checkButton(previous || current, current);\r\n            if (current !== previous) {\r\n                this.emitValueChange();\r\n            }\r\n        }\r\n        current.setFocus();\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { key: 'ad0946134c8d465b760ad792655f1cb9922db520', role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\r\n                [mode]: true,\r\n                'in-toolbar': hostContext('ion-toolbar', this.el),\r\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n                'segment-activated': this.activated,\r\n                'segment-disabled': this.disabled,\r\n                'segment-scrollable': this.scrollable,\r\n            }) }, h(\"slot\", { key: 'dcdb425bcda0d60acb7c317e5e671ed462715b4a', onSlotchange: this.onSlottedItemsChange })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"color\": [\"colorChanged\"],\r\n        \"swipeGesture\": [\"swipeGestureChanged\"],\r\n        \"value\": [\"valueChanged\"],\r\n        \"disabled\": [\"disabledChanged\"]\r\n    }; }\r\n};\r\nSegment.style = {\r\n    ios: IonSegmentIosStyle0,\r\n    md: IonSegmentMdStyle0\r\n};\r\n\r\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;grid-row:1;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;max-width:100%;line-height:22px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color-step-350, var(--ion-background-color, #fff)));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}:host(.segment-button-layout-icon-end) ::slotted(ion-label){-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}.segment-button-indicator{-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px;left:0;right:0;top:0;bottom:0}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color-step-350, var(--ion-background-color, #fff)))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color-step-350, var(--ion-background-color, #fff))))}:host(.in-toolbar-color) .segment-button-indicator-background{background:var(--ion-color-contrast)}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\r\nconst IonSegmentButtonIosStyle0 = segmentButtonIosCss;\r\n\r\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;grid-row:1;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;max-width:100%;line-height:22px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #0054e9);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #0054e9));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}:host(.segment-button-layout-icon-end) ::slotted(ion-label){-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\r\nconst IonSegmentButtonMdStyle0 = segmentButtonMdCss;\r\n\r\nlet ids = 0;\r\nconst SegmentButton = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.segmentEl = null;\r\n        this.inheritedAttributes = {};\r\n        this.updateStyle = () => {\r\n            forceUpdate(this);\r\n        };\r\n        this.updateState = () => {\r\n            const { segmentEl } = this;\r\n            if (segmentEl) {\r\n                this.checked = segmentEl.value === this.value;\r\n                if (segmentEl.disabled) {\r\n                    this.disabled = true;\r\n                }\r\n            }\r\n        };\r\n        this.checked = false;\r\n        this.disabled = false;\r\n        this.layout = 'icon-top';\r\n        this.type = 'button';\r\n        this.value = 'ion-sb-' + ids++;\r\n    }\r\n    valueChanged() {\r\n        this.updateState();\r\n    }\r\n    connectedCallback() {\r\n        const segmentEl = (this.segmentEl = this.el.closest('ion-segment'));\r\n        if (segmentEl) {\r\n            this.updateState();\r\n            addEventListener(segmentEl, 'ionSelect', this.updateState);\r\n            addEventListener(segmentEl, 'ionStyle', this.updateStyle);\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        const segmentEl = this.segmentEl;\r\n        if (segmentEl) {\r\n            removeEventListener(segmentEl, 'ionSelect', this.updateState);\r\n            removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\r\n            this.segmentEl = null;\r\n        }\r\n    }\r\n    componentWillLoad() {\r\n        this.inheritedAttributes = Object.assign({}, inheritAttributes(this.el, ['aria-label']));\r\n    }\r\n    get hasLabel() {\r\n        return !!this.el.querySelector('ion-label');\r\n    }\r\n    get hasIcon() {\r\n        return !!this.el.querySelector('ion-icon');\r\n    }\r\n    /**\r\n     * @internal\r\n     * Focuses the native <button> element\r\n     * inside of ion-segment-button.\r\n     */\r\n    async setFocus() {\r\n        const { nativeEl } = this;\r\n        if (nativeEl !== undefined) {\r\n            nativeEl.focus();\r\n        }\r\n    }\r\n    render() {\r\n        const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl } = this;\r\n        const mode = getIonMode(this);\r\n        const hasSegmentColor = () => (segmentEl === null || segmentEl === void 0 ? void 0 : segmentEl.color) !== undefined;\r\n        return (h(Host, { key: '70cf5c7a3ae2620222c5250c644faf3cfc3b3e4e', class: {\r\n                [mode]: true,\r\n                'in-toolbar': hostContext('ion-toolbar', this.el),\r\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n                'in-segment': hostContext('ion-segment', this.el),\r\n                'in-segment-color': hasSegmentColor(),\r\n                'segment-button-has-label': hasLabel,\r\n                'segment-button-has-icon': hasIcon,\r\n                'segment-button-has-label-only': hasLabel && !hasIcon,\r\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\r\n                'segment-button-disabled': disabled,\r\n                'segment-button-checked': checked,\r\n                [`segment-button-layout-${layout}`]: true,\r\n                'ion-activatable': true,\r\n                'ion-activatable-instant': true,\r\n                'ion-focusable': true,\r\n            } }, h(\"button\", Object.assign({ key: 'a53c9f1e360934e8d2e90476642ba4507fc38ebd', \"aria-selected\": checked ? 'true' : 'false', role: \"tab\", ref: (el) => (this.nativeEl = el), type: type, class: \"button-native\", part: \"native\", disabled: disabled }, this.inheritedAttributes), h(\"span\", { key: '7d8feda840d389941cc693f500b5eba0b39b41da', class: \"button-inner\" }, h(\"slot\", { key: 'd9ae1eec45db253cbf573d29cd545658dd595d87' })), mode === 'md' && h(\"ion-ripple-effect\", { key: '49e6a16968709dc9b3fc77bc9fb99acb42fda88c' })), h(\"div\", { key: '4e3ea0989ed5205dbb03586e4facb439b05a92de', part: \"indicator\", class: {\r\n                'segment-button-indicator': true,\r\n                'segment-button-indicator-animated': true,\r\n            } }, h(\"div\", { key: '65c72a151080998c1e548c87d4d4ebd5c7dda72f', part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n};\r\nSegmentButton.style = {\r\n    ios: IonSegmentButtonIosStyle0,\r\n    md: IonSegmentButtonMdStyle0\r\n};\r\n\r\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\r\n"],"names":["r","registerInstance","d","createEvent","w","writeTask","h","f","Host","i","getElement","j","forceUpdate","raf","a","addEventListener","b","removeEventListener","inheritAttributes","isRTL","c","createColorClasses","hostContext","getIonMode","segmentIosCss","IonSegmentIosStyle0","segmentMdCss","IonSegmentMdStyle0","Segment","constructor","hostRef","ionChange","ionSelect","ionStyle","onClick","ev","current","target","previous","checked","tagName","value","emitValueChange","scrollable","swipeGesture","checkButton","setCheckedClasses","onSlottedItemsChange","valueChanged","getSegmentButton","selector","_a","_b","buttons","getButtons","filter","button","disabled","currIndex","findIndex","document","activeElement","length","activated","color","undefined","selectOnFocus","colorChanged","oldValue","emitStyle","swipeGestureChanged","gestureChanged","emit","scrollActiveButtonIntoView","disabledChanged","gesture","enable","connectedCallback","componentWillLoad","componentDidLoad","_this","_asyncToGenerator","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","detail","valueBeforeGesture","activate","setNextIndex","setActivated","event","stopImmediatePropagation","Array","from","querySelectorAll","find","forEach","classList","add","remove","clicked","getIndicator","root","shadowRoot","querySelector","previousIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","next","smoothScroll","activeButton","scrollContainerBox","activeButtonBox","activeButtonLeft","x","centeredX","scrollBy","top","behavior","isEnd","rtl","nextIndex","rect","currentX","previousY","height","getRootNode","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","segment","onKeyDown","keyDownSelectsButton","key","preventDefault","setFocus","render","mode","role","class","onSlotchange","watchers","ios","md","segmentButtonIosCss","IonSegmentButtonIosStyle0","segmentButtonMdCss","IonSegmentButtonMdStyle0","ids","SegmentButton","segmentEl","inheritedAttributes","updateStyle","updateState","layout","type","closest","disconnectedCallback","Object","assign","hasLabel","hasIcon","_this2","nativeEl","focus","hasSegmentColor","ref","part","ion_segment","ion_segment_button"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}