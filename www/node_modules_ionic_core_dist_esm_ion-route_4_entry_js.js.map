{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, d as createEvent, i as getElement, h, f as Host } from './index-8d8c14b0.js';\r\nimport { c as componentOnReady, o as debounce } from './helpers-da915de8.js';\r\nimport { o as openURL, c as createColorClasses } from './theme-01f3f29c.js';\r\nimport { b as getIonMode } from './ionic-global-8180d812.js';\r\n\r\nconst Route = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\r\n        this.url = '';\r\n        this.component = undefined;\r\n        this.componentProps = undefined;\r\n        this.beforeLeave = undefined;\r\n        this.beforeEnter = undefined;\r\n    }\r\n    onUpdate(newValue) {\r\n        this.ionRouteDataChanged.emit(newValue);\r\n    }\r\n    onComponentProps(newValue, oldValue) {\r\n        if (newValue === oldValue) {\r\n            return;\r\n        }\r\n        const keys1 = newValue ? Object.keys(newValue) : [];\r\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\r\n        if (keys1.length !== keys2.length) {\r\n            this.onUpdate(newValue);\r\n            return;\r\n        }\r\n        for (const key of keys1) {\r\n            if (newValue[key] !== oldValue[key]) {\r\n                this.onUpdate(newValue);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this.ionRouteDataChanged.emit();\r\n    }\r\n    static get watchers() { return {\r\n        \"url\": [\"onUpdate\"],\r\n        \"component\": [\"onUpdate\"],\r\n        \"componentProps\": [\"onComponentProps\"]\r\n    }; }\r\n};\r\n\r\nconst RouteRedirect = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\r\n        this.from = undefined;\r\n        this.to = undefined;\r\n    }\r\n    propDidChange() {\r\n        this.ionRouteRedirectChanged.emit();\r\n    }\r\n    connectedCallback() {\r\n        this.ionRouteRedirectChanged.emit();\r\n    }\r\n    static get watchers() { return {\r\n        \"from\": [\"propDidChange\"],\r\n        \"to\": [\"propDidChange\"]\r\n    }; }\r\n};\r\n\r\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\r\n\r\n/** Join the non empty segments with \"/\". */\r\nconst generatePath = (segments) => {\r\n    const path = segments.filter((s) => s.length > 0).join('/');\r\n    return '/' + path;\r\n};\r\nconst generateUrl = (segments, useHash, queryString) => {\r\n    let url = generatePath(segments);\r\n    if (useHash) {\r\n        url = '#' + url;\r\n    }\r\n    if (queryString !== undefined) {\r\n        url += '?' + queryString;\r\n    }\r\n    return url;\r\n};\r\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\r\n    const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\r\n    if (direction === ROUTER_INTENT_FORWARD) {\r\n        history.pushState(state, '', url);\r\n    }\r\n    else {\r\n        history.replaceState(state, '', url);\r\n    }\r\n};\r\n/**\r\n * Transforms a chain to a list of segments.\r\n *\r\n * Notes:\r\n * - parameter segments of the form :param are replaced with their value,\r\n * - null is returned when a value is missing for any parameter segment.\r\n */\r\nconst chainToSegments = (chain) => {\r\n    const segments = [];\r\n    for (const route of chain) {\r\n        for (const segment of route.segments) {\r\n            if (segment[0] === ':') {\r\n                // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n                const param = route.params && route.params[segment.slice(1)];\r\n                if (!param) {\r\n                    return null;\r\n                }\r\n                segments.push(param);\r\n            }\r\n            else if (segment !== '') {\r\n                segments.push(segment);\r\n            }\r\n        }\r\n    }\r\n    return segments;\r\n};\r\n/**\r\n * Removes the prefix segments from the path segments.\r\n *\r\n * Return:\r\n * - null when the path segments do not start with the passed prefix,\r\n * - the path segments after the prefix otherwise.\r\n */\r\nconst removePrefix = (prefix, segments) => {\r\n    if (prefix.length > segments.length) {\r\n        return null;\r\n    }\r\n    if (prefix.length <= 1 && prefix[0] === '') {\r\n        return segments;\r\n    }\r\n    for (let i = 0; i < prefix.length; i++) {\r\n        if (prefix[i] !== segments[i]) {\r\n            return null;\r\n        }\r\n    }\r\n    if (segments.length === prefix.length) {\r\n        return [''];\r\n    }\r\n    return segments.slice(prefix.length);\r\n};\r\nconst readSegments = (loc, root, useHash) => {\r\n    const prefix = parsePath(root).segments;\r\n    const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\r\n    const segments = parsePath(pathname).segments;\r\n    return removePrefix(prefix, segments);\r\n};\r\n/**\r\n * Parses the path to:\r\n * - segments an array of '/' separated parts,\r\n * - queryString (undefined when no query string).\r\n */\r\nconst parsePath = (path) => {\r\n    let segments = [''];\r\n    let queryString;\r\n    if (path != null) {\r\n        const qsStart = path.indexOf('?');\r\n        if (qsStart > -1) {\r\n            queryString = path.substring(qsStart + 1);\r\n            path = path.substring(0, qsStart);\r\n        }\r\n        segments = path\r\n            .split('/')\r\n            .map((s) => s.trim())\r\n            .filter((s) => s.length > 0);\r\n        if (segments.length === 0) {\r\n            segments = [''];\r\n        }\r\n    }\r\n    return { segments, queryString };\r\n};\r\n\r\nconst printRoutes = (routes) => {\r\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n    for (const chain of routes) {\r\n        const segments = [];\r\n        chain.forEach((r) => segments.push(...r.segments));\r\n        const ids = chain.map((r) => r.id);\r\n        console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n    }\r\n    console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n    for (const redirect of redirects) {\r\n        if (redirect.to) {\r\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\r\n        }\r\n    }\r\n    console.groupEnd();\r\n};\r\n\r\n/**\r\n * Activates the passed route chain.\r\n *\r\n * There must be exactly one outlet per route entry in the chain.\r\n *\r\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\r\n * setRouteId will create or select the view in the outlet.\r\n */\r\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\r\n    try {\r\n        // find next navigation outlet in the DOM\r\n        const outlet = searchNavNode(root);\r\n        // make sure we can continue interacting the DOM, otherwise abort\r\n        if (index >= chain.length || !outlet) {\r\n            return changed;\r\n        }\r\n        await new Promise((resolve) => componentOnReady(outlet, resolve));\r\n        const route = chain[index];\r\n        const result = await outlet.setRouteId(route.id, route.params, direction, animation);\r\n        // if the outlet changed the page, reset navigation to neutral (no direction)\r\n        // this means nested outlets will not animate\r\n        if (result.changed) {\r\n            direction = ROUTER_INTENT_NONE;\r\n            changed = true;\r\n        }\r\n        // recursively set nested outlets\r\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\r\n        // once all nested outlets are visible let's make the parent visible too,\r\n        // using markVisible prevents flickering\r\n        if (result.markVisible) {\r\n            await result.markVisible();\r\n        }\r\n        return changed;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n/**\r\n * Recursively walks the outlet in the DOM.\r\n *\r\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\r\n */\r\nconst readNavState = async (root) => {\r\n    const ids = [];\r\n    let outlet;\r\n    let node = root;\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((outlet = searchNavNode(node))) {\r\n        const id = await outlet.getRouteId();\r\n        if (id) {\r\n            node = id.element;\r\n            id.element = undefined;\r\n            ids.push(id);\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n    if (searchNavNode(document.body)) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise((resolve) => {\r\n        window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\r\n    });\r\n};\r\n/** Selector for all the outlets supported by the router. */\r\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n    if (root.matches(OUTLET_SELECTOR)) {\r\n        return root;\r\n    }\r\n    const outlet = root.querySelector(OUTLET_SELECTOR);\r\n    return outlet !== null && outlet !== void 0 ? outlet : undefined;\r\n};\r\n\r\n/**\r\n * Returns whether the given redirect matches the given path segments.\r\n *\r\n * A redirect matches when the segments of the path and redirect.from are equal.\r\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\r\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\r\n */\r\nconst matchesRedirect = (segments, redirect) => {\r\n    const { from, to } = redirect;\r\n    if (to === undefined) {\r\n        return false;\r\n    }\r\n    if (from.length > segments.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < from.length; i++) {\r\n        const expected = from[i];\r\n        if (expected === '*') {\r\n            return true;\r\n        }\r\n        if (expected !== segments[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return from.length === segments.length;\r\n};\r\n/** Returns the first redirect matching the path segments or undefined when no match found. */\r\nconst findRouteRedirect = (segments, redirects) => {\r\n    return redirects.find((redirect) => matchesRedirect(segments, redirect));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n    const len = Math.min(ids.length, chain.length);\r\n    let score = 0;\r\n    for (let i = 0; i < len; i++) {\r\n        const routeId = ids[i];\r\n        const routeChain = chain[i];\r\n        // Skip results where the route id does not match the chain at the same index\r\n        if (routeId.id.toLowerCase() !== routeChain.id) {\r\n            break;\r\n        }\r\n        if (routeId.params) {\r\n            const routeIdParams = Object.keys(routeId.params);\r\n            // Only compare routes with the chain that have the same number of parameters.\r\n            if (routeIdParams.length === routeChain.segments.length) {\r\n                // Maps the route's params into a path based on the path variable names,\r\n                // to compare against the route chain format.\r\n                //\r\n                // Before:\r\n                // ```ts\r\n                // {\r\n                //  params: {\r\n                //    s1: 'a',\r\n                //    s2: 'b'\r\n                //  }\r\n                // }\r\n                // ```\r\n                //\r\n                // After:\r\n                // ```ts\r\n                // [':s1',':s2']\r\n                // ```\r\n                //\r\n                const pathWithParams = routeIdParams.map((key) => `:${key}`);\r\n                for (let j = 0; j < pathWithParams.length; j++) {\r\n                    // Skip results where the path variable is not a match\r\n                    if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\r\n                        break;\r\n                    }\r\n                    // Weight path matches for the same index higher.\r\n                    score++;\r\n                }\r\n            }\r\n        }\r\n        // Weight id matches\r\n        score++;\r\n    }\r\n    return score;\r\n};\r\n/**\r\n * Matches the segments against the chain.\r\n *\r\n * Returns:\r\n * - null when there is no match,\r\n * - a chain with the params properties updated with the parameter segments on match.\r\n */\r\nconst matchesSegments = (segments, chain) => {\r\n    const inputSegments = new RouterSegments(segments);\r\n    let matchesDefault = false;\r\n    let allparams;\r\n    for (let i = 0; i < chain.length; i++) {\r\n        const chainSegments = chain[i].segments;\r\n        if (chainSegments[0] === '') {\r\n            matchesDefault = true;\r\n        }\r\n        else {\r\n            for (const segment of chainSegments) {\r\n                const data = inputSegments.next();\r\n                // data param\r\n                if (segment[0] === ':') {\r\n                    if (data === '') {\r\n                        return null;\r\n                    }\r\n                    allparams = allparams || [];\r\n                    const params = allparams[i] || (allparams[i] = {});\r\n                    params[segment.slice(1)] = data;\r\n                }\r\n                else if (data !== segment) {\r\n                    return null;\r\n                }\r\n            }\r\n            matchesDefault = false;\r\n        }\r\n    }\r\n    const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\r\n    if (!matches) {\r\n        return null;\r\n    }\r\n    if (allparams) {\r\n        return chain.map((route, i) => ({\r\n            id: route.id,\r\n            segments: route.segments,\r\n            params: mergeParams(route.params, allparams[i]),\r\n            beforeEnter: route.beforeEnter,\r\n            beforeLeave: route.beforeLeave,\r\n        }));\r\n    }\r\n    return chain;\r\n};\r\n/**\r\n * Merges the route parameter objects.\r\n * Returns undefined when both parameters are undefined.\r\n */\r\nconst mergeParams = (a, b) => {\r\n    return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\r\n};\r\n/**\r\n * Finds the best match for the ids in the chains.\r\n *\r\n * Returns the best match or null when no match is found.\r\n * When a chain is returned the parameters are updated from the RouteIDs.\r\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\r\n */\r\nconst findChainForIDs = (ids, chains) => {\r\n    let match = null;\r\n    let maxMatches = 0;\r\n    for (const chain of chains) {\r\n        const score = matchesIDs(ids, chain);\r\n        if (score > maxMatches) {\r\n            match = chain;\r\n            maxMatches = score;\r\n        }\r\n    }\r\n    if (match) {\r\n        return match.map((route, i) => {\r\n            var _a;\r\n            return ({\r\n                id: route.id,\r\n                segments: route.segments,\r\n                params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\r\n            });\r\n        });\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Finds the best match for the segments in the chains.\r\n *\r\n * Returns the best match or null when no match is found.\r\n * When a chain is returned the parameters are updated from the segments.\r\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\r\n */\r\nconst findChainForSegments = (segments, chains) => {\r\n    let match = null;\r\n    let bestScore = 0;\r\n    for (const chain of chains) {\r\n        const matchedChain = matchesSegments(segments, chain);\r\n        if (matchedChain !== null) {\r\n            const score = computePriority(matchedChain);\r\n            if (score > bestScore) {\r\n                bestScore = score;\r\n                match = matchedChain;\r\n            }\r\n        }\r\n    }\r\n    return match;\r\n};\r\n/**\r\n * Computes the priority of a chain.\r\n *\r\n * Parameter segments are given a lower priority over fixed segments.\r\n *\r\n * Considering the following 2 chains matching the path /path/to/page:\r\n * - /path/to/:where\r\n * - /path/to/page\r\n *\r\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\r\n */\r\nconst computePriority = (chain) => {\r\n    let score = 1;\r\n    let level = 1;\r\n    for (const route of chain) {\r\n        for (const segment of route.segments) {\r\n            if (segment[0] === ':') {\r\n                score += Math.pow(1, level);\r\n            }\r\n            else if (segment !== '') {\r\n                score += Math.pow(2, level);\r\n            }\r\n            level++;\r\n        }\r\n    }\r\n    return score;\r\n};\r\nclass RouterSegments {\r\n    constructor(segments) {\r\n        this.segments = segments.slice();\r\n    }\r\n    next() {\r\n        if (this.segments.length > 0) {\r\n            return this.segments.shift();\r\n        }\r\n        return '';\r\n    }\r\n}\r\n\r\nconst readProp = (el, prop) => {\r\n    if (prop in el) {\r\n        return el[prop];\r\n    }\r\n    if (el.hasAttribute(prop)) {\r\n        return el.getAttribute(prop);\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\r\n *\r\n * The redirects are returned as a list of RouteRedirect.\r\n */\r\nconst readRedirects = (root) => {\r\n    return Array.from(root.children)\r\n        .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\r\n        .map((el) => {\r\n        const to = readProp(el, 'to');\r\n        return {\r\n            from: parsePath(readProp(el, 'from')).segments,\r\n            to: to == null ? undefined : parsePath(to),\r\n        };\r\n    });\r\n};\r\n/**\r\n * Extracts all the routes (that is <ion-route> elements inside the root).\r\n *\r\n * The routes are returned as a list of chains - the flattened tree.\r\n */\r\nconst readRoutes = (root) => {\r\n    return flattenRouterTree(readRouteNodes(root));\r\n};\r\n/**\r\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\r\n *\r\n * Note: routes without a component are ignored together with their children.\r\n */\r\nconst readRouteNodes = (node) => {\r\n    return Array.from(node.children)\r\n        .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\r\n        .map((el) => {\r\n        const component = readProp(el, 'component');\r\n        return {\r\n            segments: parsePath(readProp(el, 'url')).segments,\r\n            id: component.toLowerCase(),\r\n            params: el.componentProps,\r\n            beforeLeave: el.beforeLeave,\r\n            beforeEnter: el.beforeEnter,\r\n            children: readRouteNodes(el),\r\n        };\r\n    });\r\n};\r\n/**\r\n * Flattens a RouterTree in a list of chains.\r\n *\r\n * Each chain represents a path from the root node to a terminal node.\r\n */\r\nconst flattenRouterTree = (nodes) => {\r\n    const chains = [];\r\n    for (const node of nodes) {\r\n        flattenNode([], chains, node);\r\n    }\r\n    return chains;\r\n};\r\n/** Flattens a route node recursively and push each branch to the chains list. */\r\nconst flattenNode = (chain, chains, node) => {\r\n    chain = [\r\n        ...chain,\r\n        {\r\n            id: node.id,\r\n            segments: node.segments,\r\n            params: node.params,\r\n            beforeLeave: node.beforeLeave,\r\n            beforeEnter: node.beforeEnter,\r\n        },\r\n    ];\r\n    if (node.children.length === 0) {\r\n        chains.push(chain);\r\n        return;\r\n    }\r\n    for (const child of node.children) {\r\n        flattenNode(chain, chains, child);\r\n    }\r\n};\r\n\r\nconst Router = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\r\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\r\n        this.previousPath = null;\r\n        this.busy = false;\r\n        this.state = 0;\r\n        this.lastState = 0;\r\n        this.root = '/';\r\n        this.useHash = true;\r\n    }\r\n    async componentWillLoad() {\r\n        await waitUntilNavNode();\r\n        const canProceed = await this.runGuards(this.getSegments());\r\n        if (canProceed !== true) {\r\n            if (typeof canProceed === 'object') {\r\n                const { redirect } = canProceed;\r\n                const path = parsePath(redirect);\r\n                this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\r\n                await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\r\n            }\r\n        }\r\n        else {\r\n            await this.onRoutesChanged();\r\n        }\r\n    }\r\n    componentDidLoad() {\r\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\r\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\r\n    }\r\n    async onPopState() {\r\n        const direction = this.historyDirection();\r\n        let segments = this.getSegments();\r\n        const canProceed = await this.runGuards(segments);\r\n        if (canProceed !== true) {\r\n            if (typeof canProceed === 'object') {\r\n                segments = parsePath(canProceed.redirect).segments;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return this.writeNavStateRoot(segments, direction);\r\n    }\r\n    onBackButton(ev) {\r\n        ev.detail.register(0, (processNextHandler) => {\r\n            this.back();\r\n            processNextHandler();\r\n        });\r\n    }\r\n    /** @internal */\r\n    async canTransition() {\r\n        const canProceed = await this.runGuards();\r\n        if (canProceed !== true) {\r\n            if (typeof canProceed === 'object') {\r\n                return canProceed.redirect;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Navigate to the specified path.\r\n     *\r\n     * @param path The path to navigate to.\r\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\r\n     */\r\n    async push(path, direction = 'forward', animation) {\r\n        var _a;\r\n        if (path.startsWith('.')) {\r\n            const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\r\n            // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\r\n            const url = new URL(path, `https://host/${currentPath}`);\r\n            path = url.pathname + url.search;\r\n        }\r\n        let parsedPath = parsePath(path);\r\n        const canProceed = await this.runGuards(parsedPath.segments);\r\n        if (canProceed !== true) {\r\n            if (typeof canProceed === 'object') {\r\n                parsedPath = parsePath(canProceed.redirect);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\r\n        return this.writeNavStateRoot(parsedPath.segments, direction, animation);\r\n    }\r\n    /** Go back to previous page in the window.history. */\r\n    back() {\r\n        window.history.back();\r\n        return Promise.resolve(this.waitPromise);\r\n    }\r\n    /** @internal */\r\n    async printDebug() {\r\n        printRoutes(readRoutes(this.el));\r\n        printRedirects(readRedirects(this.el));\r\n    }\r\n    /** @internal */\r\n    async navChanged(direction) {\r\n        if (this.busy) {\r\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\r\n            return false;\r\n        }\r\n        const { ids, outlet } = await readNavState(window.document.body);\r\n        const routes = readRoutes(this.el);\r\n        const chain = findChainForIDs(ids, routes);\r\n        if (!chain) {\r\n            console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\r\n            return false;\r\n        }\r\n        const segments = chainToSegments(chain);\r\n        if (!segments) {\r\n            console.warn('[ion-router] router could not match path because some required param is missing');\r\n            return false;\r\n        }\r\n        this.setSegments(segments, direction);\r\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\r\n        return true;\r\n    }\r\n    /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\r\n    onRedirectChanged() {\r\n        const segments = this.getSegments();\r\n        if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\r\n            this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\r\n        }\r\n    }\r\n    /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\r\n    onRoutesChanged() {\r\n        return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\r\n    }\r\n    historyDirection() {\r\n        var _a;\r\n        const win = window;\r\n        if (win.history.state === null) {\r\n            this.state++;\r\n            win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\r\n        }\r\n        const state = win.history.state;\r\n        const lastState = this.lastState;\r\n        this.lastState = state;\r\n        if (state > lastState || (state >= lastState && lastState > 0)) {\r\n            return ROUTER_INTENT_FORWARD;\r\n        }\r\n        if (state < lastState) {\r\n            return ROUTER_INTENT_BACK;\r\n        }\r\n        return ROUTER_INTENT_NONE;\r\n    }\r\n    async writeNavStateRoot(segments, direction, animation) {\r\n        if (!segments) {\r\n            console.error('[ion-router] URL is not part of the routing set');\r\n            return false;\r\n        }\r\n        // lookup redirect rule\r\n        const redirects = readRedirects(this.el);\r\n        const redirect = findRouteRedirect(segments, redirects);\r\n        let redirectFrom = null;\r\n        if (redirect) {\r\n            const { segments: toSegments, queryString } = redirect.to;\r\n            this.setSegments(toSegments, direction, queryString);\r\n            redirectFrom = redirect.from;\r\n            segments = toSegments;\r\n        }\r\n        // lookup route chain\r\n        const routes = readRoutes(this.el);\r\n        const chain = findChainForSegments(segments, routes);\r\n        if (!chain) {\r\n            console.error('[ion-router] the path does not match any route');\r\n            return false;\r\n        }\r\n        // write DOM give\r\n        return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\r\n    }\r\n    async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\r\n        const unlock = await this.lock();\r\n        let changed = false;\r\n        try {\r\n            changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        unlock();\r\n        return changed;\r\n    }\r\n    async lock() {\r\n        const p = this.waitPromise;\r\n        let resolve;\r\n        this.waitPromise = new Promise((r) => (resolve = r));\r\n        if (p !== undefined) {\r\n            await p;\r\n        }\r\n        return resolve;\r\n    }\r\n    /**\r\n     * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\r\n     *\r\n     * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\r\n     * Otherwise the beforeEnterHook hook of the target route is executed.\r\n     */\r\n    async runGuards(to = this.getSegments(), from) {\r\n        if (from === undefined) {\r\n            from = parsePath(this.previousPath).segments;\r\n        }\r\n        if (!to || !from) {\r\n            return true;\r\n        }\r\n        const routes = readRoutes(this.el);\r\n        const fromChain = findChainForSegments(from, routes);\r\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n        const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\r\n        const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\r\n        if (canLeave === false || typeof canLeave === 'object') {\r\n            return canLeave;\r\n        }\r\n        const toChain = findChainForSegments(to, routes);\r\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n        const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\r\n        return beforeEnterHook ? beforeEnterHook() : true;\r\n    }\r\n    async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\r\n        if (this.busy) {\r\n            console.warn('[ion-router] router is busy, transition was cancelled');\r\n            return false;\r\n        }\r\n        this.busy = true;\r\n        // generate route event and emit will change\r\n        const routeEvent = this.routeChangeEvent(segments, redirectFrom);\r\n        if (routeEvent) {\r\n            this.ionRouteWillChange.emit(routeEvent);\r\n        }\r\n        const changed = await writeNavState(node, chain, direction, index, false, animation);\r\n        this.busy = false;\r\n        // emit did change\r\n        if (routeEvent) {\r\n            this.ionRouteDidChange.emit(routeEvent);\r\n        }\r\n        return changed;\r\n    }\r\n    setSegments(segments, direction, queryString) {\r\n        this.state++;\r\n        writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\r\n    }\r\n    getSegments() {\r\n        return readSegments(window.location, this.root, this.useHash);\r\n    }\r\n    routeChangeEvent(toSegments, redirectFromSegments) {\r\n        const from = this.previousPath;\r\n        const to = generatePath(toSegments);\r\n        this.previousPath = to;\r\n        if (to === from) {\r\n            return null;\r\n        }\r\n        const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\r\n        return {\r\n            from,\r\n            redirectedFrom,\r\n            to,\r\n        };\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\n\r\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #0054e9);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\r\nconst IonRouterLinkStyle0 = routerLinkCss;\r\n\r\nconst RouterLink = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.onClick = (ev) => {\r\n            openURL(this.href, ev, this.routerDirection, this.routerAnimation);\r\n        };\r\n        this.color = undefined;\r\n        this.href = undefined;\r\n        this.rel = undefined;\r\n        this.routerDirection = 'forward';\r\n        this.routerAnimation = undefined;\r\n        this.target = undefined;\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const attrs = {\r\n            href: this.href,\r\n            rel: this.rel,\r\n            target: this.target,\r\n        };\r\n        return (h(Host, { key: 'f876442cab5b14b7e83c6d6ad2c2d878a9c57439', onClick: this.onClick, class: createColorClasses(this.color, {\r\n                [mode]: true,\r\n                'ion-activatable': true,\r\n            }) }, h(\"a\", Object.assign({ key: 'c44b78ec1fd10a40c23bfe548860ac2b346646a8' }, attrs), h(\"slot\", { key: 'd32180a567613f79f89885135bd0d776ffc1eb8e' }))));\r\n    }\r\n};\r\nRouterLink.style = IonRouterLinkStyle0;\r\n\r\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\r\n"],"names":["r","registerInstance","d","createEvent","i","getElement","h","f","Host","c","componentOnReady","o","debounce","openURL","createColorClasses","b","getIonMode","Route","constructor","hostRef","ionRouteDataChanged","url","component","undefined","componentProps","beforeLeave","beforeEnter","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","watchers","RouteRedirect","ionRouteRedirectChanged","from","to","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","writeNavState","_ref","_asyncToGenerator","index","changed","animation","outlet","searchNavNode","Promise","resolve","result","setRouteId","element","markVisible","e","error","_x","_x2","_x3","_x4","apply","arguments","readNavState","_ref2","node","getRouteId","_x5","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","a","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","_this","canProceed","runGuards","getSegments","setSegments","writeNavStateRoot","onRoutesChanged","componentDidLoad","onRedirectChanged","bind","onPopState","_this2","historyDirection","onBackButton","ev","detail","register","processNextHandler","back","canTransition","_this3","_this4","startsWith","currentPath","URL","search","parsedPath","waitPromise","printDebug","_this5","navChanged","_this6","warn","safeWriteNavState","win","title","location","href","_this7","redirectFrom","toSegments","_this8","unlock","lock","_this9","p","_this10","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","_this11","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","routerLinkCss","IonRouterLinkStyle0","RouterLink","onClick","routerDirection","routerAnimation","color","rel","target","render","mode","attrs","class","style","ion_route","ion_route_redirect","ion_router","ion_router_link"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}