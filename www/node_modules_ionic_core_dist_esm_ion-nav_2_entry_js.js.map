{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, d as createEvent, h, i as getElement, f as Host } from './index-8d8c14b0.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\r\nimport { m as assert, s as shallowEqualStringMap } from './helpers-da915de8.js';\r\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-91ed2172.js';\r\nimport { b as getIonMode, c as config } from './ionic-global-8180d812.js';\r\nimport { a as attachComponent } from './framework-delegate-63d1a679.js';\r\nimport './index-9b0d46f4.js';\r\n\r\nconst VIEW_STATE_NEW = 1;\r\nconst VIEW_STATE_ATTACHED = 2;\r\nconst VIEW_STATE_DESTROYED = 3;\r\n// TODO(FW-2832): types\r\nclass ViewController {\r\n    constructor(component, params) {\r\n        this.component = component;\r\n        this.params = params;\r\n        this.state = VIEW_STATE_NEW;\r\n    }\r\n    async init(container) {\r\n        this.state = VIEW_STATE_ATTACHED;\r\n        if (!this.element) {\r\n            const component = this.component;\r\n            this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     */\r\n    _destroy() {\r\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\r\n        const element = this.element;\r\n        if (element) {\r\n            if (this.delegate) {\r\n                this.delegate.removeViewFromDom(element.parentElement, element);\r\n            }\r\n            else {\r\n                element.remove();\r\n            }\r\n        }\r\n        this.nav = undefined;\r\n        this.state = VIEW_STATE_DESTROYED;\r\n    }\r\n}\r\nconst matches = (view, id, params) => {\r\n    if (!view) {\r\n        return false;\r\n    }\r\n    if (view.component !== id) {\r\n        return false;\r\n    }\r\n    return shallowEqualStringMap(view.params, params);\r\n};\r\nconst convertToView = (page, params) => {\r\n    if (!page) {\r\n        return null;\r\n    }\r\n    if (page instanceof ViewController) {\r\n        return page;\r\n    }\r\n    return new ViewController(page, params);\r\n};\r\nconst convertToViews = (pages) => {\r\n    return pages\r\n        .map((page) => {\r\n        if (page instanceof ViewController) {\r\n            return page;\r\n        }\r\n        if ('component' in page) {\r\n            return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\r\n        }\r\n        return convertToView(page, undefined);\r\n    })\r\n        .filter((v) => v !== null);\r\n};\r\n\r\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;z-index:0}\";\r\nconst IonNavStyle0 = navCss;\r\n\r\nconst Nav = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\r\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\r\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\r\n        this.transInstr = [];\r\n        this.gestureOrAnimationInProgress = false;\r\n        this.useRouter = false;\r\n        this.isTransitioning = false;\r\n        this.destroyed = false;\r\n        this.views = [];\r\n        this.didLoad = false;\r\n        this.delegate = undefined;\r\n        this.swipeGesture = undefined;\r\n        this.animated = true;\r\n        this.animation = undefined;\r\n        this.rootParams = undefined;\r\n        this.root = undefined;\r\n    }\r\n    swipeGestureChanged() {\r\n        if (this.gesture) {\r\n            this.gesture.enable(this.swipeGesture === true);\r\n        }\r\n    }\r\n    rootChanged() {\r\n        if (this.root === undefined) {\r\n            return;\r\n        }\r\n        if (this.didLoad === false) {\r\n            /**\r\n             * If the component has not loaded yet, we can skip setting up the root component.\r\n             * It will be called when `componentDidLoad` fires.\r\n             */\r\n            return;\r\n        }\r\n        if (!this.useRouter) {\r\n            if (this.root !== undefined) {\r\n                this.setRoot(this.root, this.rootParams);\r\n            }\r\n        }\r\n    }\r\n    componentWillLoad() {\r\n        this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\r\n        if (this.swipeGesture === undefined) {\r\n            const mode = getIonMode(this);\r\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\r\n        }\r\n        this.ionNavWillLoad.emit();\r\n    }\r\n    async componentDidLoad() {\r\n        // We want to set this flag before any watch callbacks are manually called\r\n        this.didLoad = true;\r\n        this.rootChanged();\r\n        this.gesture = (await import('./swipe-back-e5394307.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\r\n        this.swipeGestureChanged();\r\n    }\r\n    connectedCallback() {\r\n        this.destroyed = false;\r\n    }\r\n    disconnectedCallback() {\r\n        for (const view of this.views) {\r\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\r\n            view._destroy();\r\n        }\r\n        // Release swipe back gesture and transition.\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n        this.transInstr.length = 0;\r\n        this.views.length = 0;\r\n        this.destroyed = true;\r\n    }\r\n    /**\r\n     * Push a new component onto the current navigation stack. Pass any additional\r\n     * information along as an object. This additional information is accessible\r\n     * through NavParams.\r\n     *\r\n     * @param component The component to push onto the navigation stack.\r\n     * @param componentProps Any properties of the component.\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    push(component, componentProps, opts, done) {\r\n        return this.insert(-1, component, componentProps, opts, done);\r\n    }\r\n    /**\r\n     * Inserts a component into the navigation stack at the specified index.\r\n     * This is useful to add a component at any point in the navigation stack.\r\n     *\r\n     * @param insertIndex The index to insert the component at in the stack.\r\n     * @param component The component to insert into the navigation stack.\r\n     * @param componentProps Any properties of the component.\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    insert(insertIndex, component, componentProps, opts, done) {\r\n        return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\r\n    }\r\n    /**\r\n     * Inserts an array of components into the navigation stack at the specified index.\r\n     * The last component in the array will become instantiated as a view, and animate\r\n     * in to become the active view.\r\n     *\r\n     * @param insertIndex The index to insert the components at in the stack.\r\n     * @param insertComponents The components to insert into the navigation stack.\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    insertPages(insertIndex, insertComponents, opts, done) {\r\n        return this.queueTrns({\r\n            insertStart: insertIndex,\r\n            insertViews: insertComponents,\r\n            opts,\r\n        }, done);\r\n    }\r\n    /**\r\n     * Pop a component off of the navigation stack. Navigates back from the current\r\n     * component.\r\n     *\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    pop(opts, done) {\r\n        return this.removeIndex(-1, 1, opts, done);\r\n    }\r\n    /**\r\n     * Pop to a specific index in the navigation stack.\r\n     *\r\n     * @param indexOrViewCtrl The index or view controller to pop to.\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    popTo(indexOrViewCtrl, opts, done) {\r\n        const ti = {\r\n            removeStart: -1,\r\n            removeCount: -1,\r\n            opts,\r\n        };\r\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\r\n            ti.removeView = indexOrViewCtrl;\r\n            ti.removeStart = 1;\r\n        }\r\n        else if (typeof indexOrViewCtrl === 'number') {\r\n            ti.removeStart = indexOrViewCtrl + 1;\r\n        }\r\n        return this.queueTrns(ti, done);\r\n    }\r\n    /**\r\n     * Navigate back to the root of the stack, no matter how far back that is.\r\n     *\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    popToRoot(opts, done) {\r\n        return this.removeIndex(1, -1, opts, done);\r\n    }\r\n    /**\r\n     * Removes a component from the navigation stack at the specified index.\r\n     *\r\n     * @param startIndex The number to begin removal at.\r\n     * @param removeCount The number of components to remove.\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    removeIndex(startIndex, removeCount = 1, opts, done) {\r\n        return this.queueTrns({\r\n            removeStart: startIndex,\r\n            removeCount,\r\n            opts,\r\n        }, done);\r\n    }\r\n    /**\r\n     * Set the root for the current navigation stack to a component.\r\n     *\r\n     * @param component The component to set as the root of the navigation stack.\r\n     * @param componentProps Any properties of the component.\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    setRoot(component, componentProps, opts, done) {\r\n        return this.setPages([{ component, componentProps }], opts, done);\r\n    }\r\n    /**\r\n     * Set the views of the current navigation stack and navigate to the last view.\r\n     * By default animations are disabled, but they can be enabled by passing options\r\n     * to the navigation controller. Navigation parameters can also be passed to the\r\n     * individual pages in the array.\r\n     *\r\n     * @param views The list of views to set as the navigation stack.\r\n     * @param opts The navigation options.\r\n     * @param done The transition complete function.\r\n     */\r\n    setPages(views, opts, done) {\r\n        opts !== null && opts !== void 0 ? opts : (opts = {});\r\n        // if animation wasn't set to true then default it to NOT animate\r\n        if (opts.animated !== true) {\r\n            opts.animated = false;\r\n        }\r\n        return this.queueTrns({\r\n            insertStart: 0,\r\n            insertViews: views,\r\n            removeStart: 0,\r\n            removeCount: -1,\r\n            opts,\r\n        }, done);\r\n    }\r\n    /**\r\n     * Called by the router to update the view.\r\n     *\r\n     * @param id The component tag.\r\n     * @param params The component params.\r\n     * @param direction A direction hint.\r\n     * @param animation an AnimationBuilder.\r\n     *\r\n     * @return the status.\r\n     * @internal\r\n     */\r\n    setRouteId(id, params, direction, animation) {\r\n        const active = this.getActiveSync();\r\n        if (matches(active, id, params)) {\r\n            return Promise.resolve({\r\n                changed: false,\r\n                element: active.element,\r\n            });\r\n        }\r\n        let resolve;\r\n        const promise = new Promise((r) => (resolve = r));\r\n        let finish;\r\n        const commonOpts = {\r\n            updateURL: false,\r\n            viewIsReady: (enteringEl) => {\r\n                let mark;\r\n                const p = new Promise((r) => (mark = r));\r\n                resolve({\r\n                    changed: true,\r\n                    element: enteringEl,\r\n                    markVisible: async () => {\r\n                        mark();\r\n                        await finish;\r\n                    },\r\n                });\r\n                return p;\r\n            },\r\n        };\r\n        if (direction === 'root') {\r\n            finish = this.setRoot(id, params, commonOpts);\r\n        }\r\n        else {\r\n            // Look for a view matching the target in the view stack.\r\n            const viewController = this.views.find((v) => matches(v, id, params));\r\n            if (viewController) {\r\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\r\n            }\r\n            else if (direction === 'forward') {\r\n                finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\r\n            }\r\n            else if (direction === 'back') {\r\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\r\n            }\r\n        }\r\n        return promise;\r\n    }\r\n    /**\r\n     * Called by <ion-router> to retrieve the current component.\r\n     *\r\n     * @internal\r\n     */\r\n    async getRouteId() {\r\n        const active = this.getActiveSync();\r\n        if (active) {\r\n            return {\r\n                id: active.element.tagName,\r\n                params: active.params,\r\n                element: active.element,\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Get the active view.\r\n     */\r\n    async getActive() {\r\n        return this.getActiveSync();\r\n    }\r\n    /**\r\n     * Get the view at the specified index.\r\n     *\r\n     * @param index The index of the view.\r\n     */\r\n    async getByIndex(index) {\r\n        return this.views[index];\r\n    }\r\n    /**\r\n     * Returns `true` if the current view can go back.\r\n     *\r\n     * @param view The view to check.\r\n     */\r\n    async canGoBack(view) {\r\n        return this.canGoBackSync(view);\r\n    }\r\n    /**\r\n     * Get the previous view.\r\n     *\r\n     * @param view The view to get.\r\n     */\r\n    async getPrevious(view) {\r\n        return this.getPreviousSync(view);\r\n    }\r\n    /**\r\n     * Returns the number of views in the stack.\r\n     */\r\n    async getLength() {\r\n        return Promise.resolve(this.views.length);\r\n    }\r\n    getActiveSync() {\r\n        return this.views[this.views.length - 1];\r\n    }\r\n    canGoBackSync(view = this.getActiveSync()) {\r\n        return !!(view && this.getPreviousSync(view));\r\n    }\r\n    getPreviousSync(view = this.getActiveSync()) {\r\n        if (!view) {\r\n            return undefined;\r\n        }\r\n        const views = this.views;\r\n        const index = views.indexOf(view);\r\n        return index > 0 ? views[index - 1] : undefined;\r\n    }\r\n    /**\r\n     * Adds a navigation stack change to the queue and schedules it to run.\r\n     *\r\n     * @returns Whether the transition succeeds.\r\n     */\r\n    async queueTrns(ti, done) {\r\n        var _a, _b;\r\n        if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\r\n            return false;\r\n        }\r\n        const promise = new Promise((resolve, reject) => {\r\n            ti.resolve = resolve;\r\n            ti.reject = reject;\r\n        });\r\n        ti.done = done;\r\n        /**\r\n         * If using router, check to see if navigation hooks\r\n         * will allow us to perform this transition. This\r\n         * is required in order for hooks to work with\r\n         * the ion-back-button or swipe to go back.\r\n         */\r\n        if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\r\n            const router = document.querySelector('ion-router');\r\n            if (router) {\r\n                const canTransition = await router.canTransition();\r\n                if (canTransition === false) {\r\n                    return false;\r\n                }\r\n                if (typeof canTransition === 'string') {\r\n                    router.push(canTransition, ti.opts.direction || 'back');\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        // Normalize empty\r\n        if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\r\n            ti.insertViews = undefined;\r\n        }\r\n        // Enqueue transition instruction\r\n        this.transInstr.push(ti);\r\n        // if there isn't a transition already happening\r\n        // then this will kick off this transition\r\n        this.nextTrns();\r\n        return promise;\r\n    }\r\n    success(result, ti) {\r\n        if (this.destroyed) {\r\n            this.fireError('nav controller was destroyed', ti);\r\n            return;\r\n        }\r\n        if (ti.done) {\r\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\r\n        }\r\n        ti.resolve(result.hasCompleted);\r\n        if (ti.opts.updateURL !== false && this.useRouter) {\r\n            const router = document.querySelector('ion-router');\r\n            if (router) {\r\n                const direction = result.direction === 'back' ? 'back' : 'forward';\r\n                router.navChanged(direction);\r\n            }\r\n        }\r\n    }\r\n    failed(rejectReason, ti) {\r\n        if (this.destroyed) {\r\n            this.fireError('nav controller was destroyed', ti);\r\n            return;\r\n        }\r\n        this.transInstr.length = 0;\r\n        this.fireError(rejectReason, ti);\r\n    }\r\n    fireError(rejectReason, ti) {\r\n        if (ti.done) {\r\n            ti.done(false, false, rejectReason);\r\n        }\r\n        if (ti.reject && !this.destroyed) {\r\n            ti.reject(rejectReason);\r\n        }\r\n        else {\r\n            ti.resolve(false);\r\n        }\r\n    }\r\n    /**\r\n     * Consumes the next transition in the queue.\r\n     *\r\n     * @returns whether the transition is executed.\r\n     */\r\n    nextTrns() {\r\n        // this is the framework's bread 'n butta function\r\n        // only one transition is allowed at any given time\r\n        if (this.isTransitioning) {\r\n            return false;\r\n        }\r\n        // there is no transition happening right now, executes the next instructions.\r\n        const ti = this.transInstr.shift();\r\n        if (!ti) {\r\n            return false;\r\n        }\r\n        this.runTransition(ti);\r\n        return true;\r\n    }\r\n    /** Executes all the transition instruction from the queue. */\r\n    async runTransition(ti) {\r\n        try {\r\n            // set that this nav is actively transitioning\r\n            this.ionNavWillChange.emit();\r\n            this.isTransitioning = true;\r\n            this.prepareTI(ti);\r\n            const leavingView = this.getActiveSync();\r\n            const enteringView = this.getEnteringView(ti, leavingView);\r\n            if (!leavingView && !enteringView) {\r\n                throw new Error('no views in the stack to be removed');\r\n            }\r\n            if (enteringView && enteringView.state === VIEW_STATE_NEW) {\r\n                await enteringView.init(this.el);\r\n            }\r\n            this.postViewInit(enteringView, leavingView, ti);\r\n            // Needs transition?\r\n            const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\r\n            if (requiresTransition && ti.opts && leavingView) {\r\n                const isBackDirection = ti.opts.direction === 'back';\r\n                /**\r\n                 * If heading back, use the entering page's animation\r\n                 * unless otherwise specified by the developer.\r\n                 */\r\n                if (isBackDirection) {\r\n                    ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\r\n                }\r\n                leavingView.animationBuilder = ti.opts.animationBuilder;\r\n            }\r\n            let result;\r\n            if (requiresTransition) {\r\n                result = await this.transition(enteringView, leavingView, ti);\r\n            }\r\n            else {\r\n                // transition is not required, so we are already done!\r\n                // they're inserting/removing the views somewhere in the middle or\r\n                // beginning, so visually nothing needs to animate/transition\r\n                // resolve immediately because there's no animation that's happening\r\n                result = {\r\n                    hasCompleted: true,\r\n                    requiresTransition: false,\r\n                };\r\n            }\r\n            this.success(result, ti);\r\n            this.ionNavDidChange.emit();\r\n        }\r\n        catch (rejectReason) {\r\n            this.failed(rejectReason, ti);\r\n        }\r\n        this.isTransitioning = false;\r\n        this.nextTrns();\r\n    }\r\n    prepareTI(ti) {\r\n        var _a, _b;\r\n        var _c;\r\n        const viewsLength = this.views.length;\r\n        (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\r\n        (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\r\n        if (ti.removeView !== undefined) {\r\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\r\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\r\n            const index = this.views.indexOf(ti.removeView);\r\n            if (index < 0) {\r\n                throw new Error('removeView was not found');\r\n            }\r\n            ti.removeStart += index;\r\n        }\r\n        if (ti.removeStart !== undefined) {\r\n            if (ti.removeStart < 0) {\r\n                ti.removeStart = viewsLength - 1;\r\n            }\r\n            if (ti.removeCount < 0) {\r\n                ti.removeCount = viewsLength - ti.removeStart;\r\n            }\r\n            ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\r\n        }\r\n        if (ti.insertViews) {\r\n            // allow -1 to be passed in to auto push it on the end\r\n            // and clean up the index if it's larger then the size of the stack\r\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\r\n                ti.insertStart = viewsLength;\r\n            }\r\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\r\n        }\r\n        const insertViews = ti.insertViews;\r\n        if (!insertViews) {\r\n            return;\r\n        }\r\n        assert(insertViews.length > 0, 'length can not be zero');\r\n        const viewControllers = convertToViews(insertViews);\r\n        if (viewControllers.length === 0) {\r\n            throw new Error('invalid views to insert');\r\n        }\r\n        // Check all the inserted view are correct\r\n        for (const view of viewControllers) {\r\n            view.delegate = ti.opts.delegate;\r\n            const nav = view.nav;\r\n            if (nav && nav !== this) {\r\n                throw new Error('inserted view was already inserted');\r\n            }\r\n            if (view.state === VIEW_STATE_DESTROYED) {\r\n                throw new Error('inserted view was already destroyed');\r\n            }\r\n        }\r\n        ti.insertViews = viewControllers;\r\n    }\r\n    /**\r\n     * Returns the view that will be entered considering the transition instructions.\r\n     *\r\n     * @param ti The instructions.\r\n     * @param leavingView The view being left or undefined if none.\r\n     *\r\n     * @returns The view that will be entered, undefined if none.\r\n     */\r\n    getEnteringView(ti, leavingView) {\r\n        // The last inserted view will be entered when view are inserted.\r\n        const insertViews = ti.insertViews;\r\n        if (insertViews !== undefined) {\r\n            return insertViews[insertViews.length - 1];\r\n        }\r\n        // When views are deleted, we will enter the last view that is not removed and not the view being left.\r\n        const removeStart = ti.removeStart;\r\n        if (removeStart !== undefined) {\r\n            const views = this.views;\r\n            const removeEnd = removeStart + ti.removeCount;\r\n            for (let i = views.length - 1; i >= 0; i--) {\r\n                const view = views[i];\r\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Adds and Removes the views from the navigation stack.\r\n     *\r\n     * @param enteringView The view being entered.\r\n     * @param leavingView The view being left.\r\n     * @param ti The instructions.\r\n     */\r\n    postViewInit(enteringView, leavingView, ti) {\r\n        var _a, _b, _c;\r\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\r\n        assert(ti.resolve, 'resolve must be valid');\r\n        assert(ti.reject, 'reject must be valid');\r\n        // Compute the views to remove.\r\n        const opts = ti.opts;\r\n        const { insertViews, removeStart, removeCount } = ti;\r\n        /** Records the view to destroy */\r\n        let destroyQueue;\r\n        // there are views to remove\r\n        if (removeStart !== undefined && removeCount !== undefined) {\r\n            assert(removeStart >= 0, 'removeStart can not be negative');\r\n            assert(removeCount >= 0, 'removeCount can not be negative');\r\n            destroyQueue = [];\r\n            for (let i = removeStart; i < removeStart + removeCount; i++) {\r\n                const view = this.views[i];\r\n                if (view !== undefined && view !== enteringView && view !== leavingView) {\r\n                    destroyQueue.push(view);\r\n                }\r\n            }\r\n            // default the direction to \"back\"\r\n            (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\r\n        }\r\n        const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\r\n        assert(finalNumViews >= 0, 'final balance can not be negative');\r\n        if (finalNumViews === 0) {\r\n            console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\r\n            throw new Error('navigation stack needs at least one root page');\r\n        }\r\n        // At this point the transition can not be rejected, any throw should be an error\r\n        // Insert the new views in the stack.\r\n        if (insertViews) {\r\n            // add the views to the\r\n            let insertIndex = ti.insertStart;\r\n            for (const view of insertViews) {\r\n                this.insertViewAt(view, insertIndex);\r\n                insertIndex++;\r\n            }\r\n            if (ti.enteringRequiresTransition) {\r\n                // default to forward if not already set\r\n                (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\r\n            }\r\n        }\r\n        // if the views to be removed are in the beginning or middle\r\n        // and there is not a view that needs to visually transition out\r\n        // then just destroy them and don't transition anything\r\n        // batch all of lifecycles together\r\n        // let's make sure, callbacks are zoned\r\n        if (destroyQueue && destroyQueue.length > 0) {\r\n            for (const view of destroyQueue) {\r\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\r\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\r\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\r\n            }\r\n            // once all lifecycle events has been delivered, we can safely detroy the views\r\n            for (const view of destroyQueue) {\r\n                this.destroyView(view);\r\n            }\r\n        }\r\n    }\r\n    async transition(enteringView, leavingView, ti) {\r\n        // we should animate (duration > 0) if the pushed page is not the first one (startup)\r\n        // or if it is a portal (modal, actionsheet, etc.)\r\n        const opts = ti.opts;\r\n        const progressCallback = opts.progressAnimation\r\n            ? (ani) => {\r\n                /**\r\n                 * Because this progress callback is called asynchronously\r\n                 * it is possible for the gesture to start and end before\r\n                 * the animation is ever set. In that scenario, we should\r\n                 * immediately call progressEnd so that the transition promise\r\n                 * resolves and the gesture does not get locked up.\r\n                 */\r\n                if (ani !== undefined && !this.gestureOrAnimationInProgress) {\r\n                    this.gestureOrAnimationInProgress = true;\r\n                    ani.onFinish(() => {\r\n                        this.gestureOrAnimationInProgress = false;\r\n                    }, { oneTimeCallback: true });\r\n                    /**\r\n                     * Playing animation to beginning\r\n                     * with a duration of 0 prevents\r\n                     * any flickering when the animation\r\n                     * is later cleaned up.\r\n                     */\r\n                    ani.progressEnd(0, 0, 0);\r\n                }\r\n                else {\r\n                    this.sbAni = ani;\r\n                }\r\n            }\r\n            : undefined;\r\n        const mode = getIonMode(this);\r\n        const enteringEl = enteringView.element;\r\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n        const leavingEl = leavingView && leavingView.element;\r\n        const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\r\n            leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\r\n        const { hasCompleted } = await transition(animationOpts);\r\n        return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\r\n    }\r\n    transitionFinish(hasCompleted, enteringView, leavingView, opts) {\r\n        /**\r\n         * If the transition did not complete, the leavingView will still be the active\r\n         * view on the stack. Otherwise unmount all the views after the enteringView.\r\n         */\r\n        const activeView = hasCompleted ? enteringView : leavingView;\r\n        if (activeView) {\r\n            this.unmountInactiveViews(activeView);\r\n        }\r\n        return {\r\n            hasCompleted,\r\n            requiresTransition: true,\r\n            enteringView,\r\n            leavingView,\r\n            direction: opts.direction,\r\n        };\r\n    }\r\n    /**\r\n     * Inserts a view at the specified index.\r\n     *\r\n     * When the view already is in the stack it will be moved to the new position.\r\n     *\r\n     * @param view The view to insert.\r\n     * @param index The index where to insert the view.\r\n     */\r\n    insertViewAt(view, index) {\r\n        const views = this.views;\r\n        const existingIndex = views.indexOf(view);\r\n        if (existingIndex > -1) {\r\n            assert(view.nav === this, 'view is not part of the nav');\r\n            // The view already in the stack, removes it.\r\n            views.splice(existingIndex, 1);\r\n            // and add it back at the requested index.\r\n            views.splice(index, 0, view);\r\n        }\r\n        else {\r\n            assert(!view.nav, 'nav is used');\r\n            // this is a new view to add to the stack\r\n            // create the new entering view\r\n            view.nav = this;\r\n            views.splice(index, 0, view);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a view from the stack.\r\n     *\r\n     * @param view The view to remove.\r\n     */\r\n    removeView(view) {\r\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\r\n        const views = this.views;\r\n        const index = views.indexOf(view);\r\n        assert(index > -1, 'view must be part of the stack');\r\n        if (index >= 0) {\r\n            views.splice(index, 1);\r\n        }\r\n    }\r\n    destroyView(view) {\r\n        view._destroy();\r\n        this.removeView(view);\r\n    }\r\n    /**\r\n     * Unmounts all inactive views after the specified active view.\r\n     *\r\n     * DOM WRITE\r\n     *\r\n     * @param activeView The view that is actively visible in the stack. Used to calculate which views to unmount.\r\n     */\r\n    unmountInactiveViews(activeView) {\r\n        // ok, cleanup time!! Destroy all of the views that are\r\n        // INACTIVE and come after the active view\r\n        // only do this if the views exist, though\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n        const views = this.views;\r\n        const activeViewIndex = views.indexOf(activeView);\r\n        for (let i = views.length - 1; i >= 0; i--) {\r\n            const view = views[i];\r\n            /**\r\n             * When inserting multiple views via insertPages\r\n             * the last page will be transitioned to, but the\r\n             * others will not be. As a result, a DOM element\r\n             * will only be created for the last page inserted.\r\n             * As a result, it is possible to have views in the\r\n             * stack that do not have `view.element` yet.\r\n             */\r\n            const element = view.element;\r\n            if (element) {\r\n                if (i > activeViewIndex) {\r\n                    // this view comes after the active view\r\n                    // let's unload it\r\n                    lifecycle(element, LIFECYCLE_WILL_UNLOAD);\r\n                    this.destroyView(view);\r\n                }\r\n                else if (i < activeViewIndex) {\r\n                    // this view comes before the active view\r\n                    // and it is not a portal then ensure it is hidden\r\n                    setPageHidden(element, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    canStart() {\r\n        return (!this.gestureOrAnimationInProgress &&\r\n            !!this.swipeGesture &&\r\n            !this.isTransitioning &&\r\n            this.transInstr.length === 0 &&\r\n            this.canGoBackSync());\r\n    }\r\n    onStart() {\r\n        this.gestureOrAnimationInProgress = true;\r\n        this.pop({ direction: 'back', progressAnimation: true });\r\n    }\r\n    onMove(stepValue) {\r\n        if (this.sbAni) {\r\n            this.sbAni.progressStep(stepValue);\r\n        }\r\n    }\r\n    onEnd(shouldComplete, stepValue, dur) {\r\n        if (this.sbAni) {\r\n            this.sbAni.onFinish(() => {\r\n                this.gestureOrAnimationInProgress = false;\r\n            }, { oneTimeCallback: true });\r\n            // Account for rounding errors in JS\r\n            let newStepValue = shouldComplete ? -0.001 : 0.001;\r\n            /**\r\n             * Animation will be reversed here, so need to\r\n             * reverse the easing curve as well\r\n             *\r\n             * Additionally, we need to account for the time relative\r\n             * to the new easing curve, as `stepValue` is going to be given\r\n             * in terms of a linear curve.\r\n             */\r\n            if (!shouldComplete) {\r\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\r\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\r\n            }\r\n            else {\r\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\r\n            }\r\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\r\n        }\r\n        else {\r\n            this.gestureOrAnimationInProgress = false;\r\n        }\r\n    }\r\n    render() {\r\n        return h(\"slot\", { key: 'e9d99a8a0b84f02f9964d8143cd5e647e43334f9' });\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"swipeGesture\": [\"swipeGestureChanged\"],\r\n        \"root\": [\"rootChanged\"]\r\n    }; }\r\n};\r\nNav.style = IonNavStyle0;\r\n\r\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\r\n    const nav = el.closest('ion-nav');\r\n    if (nav) {\r\n        if (routerDirection === 'forward') {\r\n            if (component !== undefined) {\r\n                return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\r\n            }\r\n        }\r\n        else if (routerDirection === 'root') {\r\n            if (component !== undefined) {\r\n                return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\r\n            }\r\n        }\r\n        else if (routerDirection === 'back') {\r\n            return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\r\n        }\r\n    }\r\n    return Promise.resolve(false);\r\n};\r\n\r\nconst NavLink = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.onClick = () => {\r\n            return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\r\n        };\r\n        this.component = undefined;\r\n        this.componentProps = undefined;\r\n        this.routerDirection = 'forward';\r\n        this.routerAnimation = undefined;\r\n    }\r\n    render() {\r\n        return h(Host, { key: '42c23dcdec5fdb25defebaf6e8a9fa75754ff8eb', onClick: this.onClick });\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\n\r\nexport { Nav as ion_nav, NavLink as ion_nav_link };\r\n"],"names":["r","registerInstance","d","createEvent","h","i","getElement","f","Host","g","getTimeGivenProgression","m","assert","s","shallowEqualStringMap","l","lifecycle","t","transition","setPageHidden","LIFECYCLE_WILL_UNLOAD","b","LIFECYCLE_WILL_LEAVE","c","LIFECYCLE_DID_LEAVE","getIonMode","config","a","attachComponent","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","_this","_asyncToGenerator","element","delegate","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","IonNavStyle0","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","gestureOrAnimationInProgress","useRouter","isTransitioning","destroyed","views","didLoad","swipeGesture","animated","animation","rootParams","root","swipeGestureChanged","gesture","enable","rootChanged","setRoot","componentWillLoad","document","querySelector","el","closest","mode","getBoolean","emit","componentDidLoad","_this2","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","connectedCallback","disconnectedCallback","destroy","length","push","opts","done","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","pop","removeIndex","popTo","indexOrViewCtrl","ti","removeStart","removeCount","removeView","popToRoot","startIndex","setPages","setRouteId","direction","active","getActiveSync","Promise","resolve","changed","promise","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","_ref","apply","arguments","viewController","find","Object","assign","animationBuilder","getRouteId","_this3","tagName","getActive","_this4","getByIndex","index","_this5","canGoBack","_this6","canGoBackSync","getPrevious","_this7","getPreviousSync","getLength","_this8","indexOf","_this9","_a","_b","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","_this10","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","_c","viewsLength","viewControllers","removeEnd","destroyQueue","finalNumViews","console","warn","insertViewAt","destroyView","_this11","progressCallback","progressAnimation","ani","onFinish","oneTimeCallback","progressEnd","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","activeView","unmountInactiveViews","existingIndex","splice","activeViewIndex","stepValue","progressStep","shouldComplete","dur","newStepValue","easing","render","key","watchers","style","navLink","routerDirection","routerAnimation","NavLink","onClick","ion_nav","ion_nav_link"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}