{"version":3,"file":"src_app_services_api_service_ts.js","mappings":"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","sources":["./src/app/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Order, Product } from '../components/order-card/order-card.component';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private api = environment.api;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private toastController: ToastController,\r\n    private router:Router\r\n  ) { }\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\r\n    const token = currentUser && currentUser.token ? currentUser.token : ''; // Obtiene el token de localStorage\r\n\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` // Incluye el token en el encabezado Authorization\r\n    });\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const url = this.api + '/login';\r\n    const body = { boleta: username, password: password };\r\n    return this.http.post(url, body, { observe: 'response', withCredentials: true }) // Observa la respuesta completa\r\n      .pipe(\r\n        map((response: HttpResponse<any>) => response.body),\r\n        catchError(async error => {\r\n          console.error('Error en el inicio de sesión:', error);\r\n\r\n          // Muestra el mensaje de error en un toast\r\n          const toast = await this.toastController.create({\r\n            message: error.error,\r\n            duration: 2000,\r\n            position: 'top'\r\n          });\r\n          toast.present()\r\n\r\n          return throwError(() => new Error(error)); // Propaga el error para manejarlo en el componente\r\n        })\r\n      );\r\n  }\r\n\r\n  logout(): Observable<string> {\r\n    const url = this.api + '/login'; // Endpoint de cierre de sesión\r\n    return this.http.delete(url, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  verifySession(): Observable<any> {\r\n    const url = this.api + '/login/verify';\r\n    return this.http.get(url, { withCredentials: true }) // withCredentials: true para enviar cookies\r\n      .pipe(\r\n        map((response: any) => response),\r\n        catchError(error => {\r\n          if (error.status === 401) {\r\n            // Si no está autenticado, redirigir a la página de inicio de sesión\r\n            this.router.navigate(['/login']); // Redirige al login en caso de error 401\r\n            return of(null);\r\n          } else {\r\n            console.error('Error al verificar la sesión:', error);\r\n            return throwError(() => new Error(error));\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  products(): Observable<any>{\r\n    const url = this.api + '/products/data';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProducts(page: number): Observable<any[]> { // Método para obtener productos sin búsqueda\r\n    const params = new HttpParams().set('page', page.toString());\r\n    const url = this.api + '/products/data';\r\n    return this.http.get<any[]>(url, { params });\r\n  }\r\n\r\n  searchProducts(page: number, query: string): Observable<any[]> { // Método para buscar productos\r\n    const params = new HttpParams().set('page', page.toString()).set('query', query);\r\n    const url = this.api + '/products/search';\r\n    return this.http.get<any[]>(url, { params });\r\n  }\r\n\r\n  \r\n  productDetails(id: string): Observable<any>{\r\n    const url = this.api + '/products/data/' + id;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  register(jsonData: any): Observable<string> {\r\n    const url = this.api + '/verify/registration';\r\n    return this.http.post(url, jsonData, { headers: this.getHeaders(), observe: 'response', responseType: 'text' }) // Incluye los encabezados\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  createOrder(orderData: any): Observable<string> {\r\n    const url = this.api + '/pedidos';\r\n    return this.http.post(url, orderData, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true }) // Incluye los encabezados\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    const url = this.api + '/pedidos';\r\n    return this.http.get<Order[]>(url, { withCredentials: true }); \r\n  }\r\n\r\n  getSales(): Observable<Order[]> {\r\n    const url = this.api + '/pedidos/sales';\r\n    return this.http.get<Order[]>(url, { withCredentials: true });\r\n  }\r\n\r\n  getInventory(): Observable<any[]> {\r\n    const url = this.api + '/products/seller/data';\r\n    return this.http.get<Product[]>(url, { withCredentials: true });\r\n  }\r\n\r\n  updateOrderStatus(orderId: string, productId: number, newStatus: string): Observable<string> {\r\n    const url = this.api + `/pedidos/${orderId}`; // URL con el ID del pedido\r\n    const body = { estado: newStatus, id_producto: productId }; // Datos en formato JSON\r\n\r\n    return this.http.patch(url, body, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProduct(productId: number, formData: FormData): Observable<any> {\r\n    const url = this.api + `/products/seller/data/${productId}`;\r\n    return this.http.patch(url, formData, { observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  createProduct(formData: FormData): Observable<any> {\r\n    const url = this.api + `/products/seller`;\r\n    return this.http.post(url, formData, { observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteProduct(productId: number): Observable<any> {\r\n    const url = this.api + `/products/seller/${productId}`;\r\n    return this.http.delete(url, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProductAvailability(productId: number, availability: boolean): Observable<any> {\r\n    const url = this.api + `/products/seller/avail/${productId}`;\r\n    return this.http.patch(url, { disponibilidad: availability }, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  getProductImage(image: string | null, placeholder: boolean): string {\r\n    const backend_url = this.api + `/images/products/${image}`;\r\n    const generic_url_seed ='https://picsum.photos/seed';\r\n    const generic_url = 'https://picsum.photos/256'\r\n\r\n    if (image && !placeholder) {\r\n      return backend_url;\r\n    } else if (placeholder) {\r\n      return `${generic_url_seed}/${image}/256`;\r\n    } else {\r\n      return generic_url;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}"],"names":["HttpHeaders","HttpParams","of","throwError","catchError","map","environment","ApiService","constructor","http","toastController","router","api","getHeaders","currentUser","JSON","parse","localStorage","getItem","token","login","username","password","_this","url","body","boleta","post","observe","withCredentials","pipe","response","_ref","_asyncToGenerator","error","console","toast","create","message","duration","position","present","Error","_x","apply","arguments","logout","delete","headers","responseType","verifySession","get","status","navigate","products","getProducts","page","params","set","toString","searchProducts","query","productDetails","id","register","jsonData","createOrder","orderData","getOrders","getSales","getInventory","updateOrderStatus","orderId","productId","newStatus","estado","id_producto","patch","updateProduct","formData","createProduct","deleteProduct","updateProductAvailability","availability","disponibilidad","getProductImage","image","placeholder","backend_url","generic_url_seed","generic_url","i0","ɵɵinject","i1","HttpClient","i2","ToastController","i3","Router","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}