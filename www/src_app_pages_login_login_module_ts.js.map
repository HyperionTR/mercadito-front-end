{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html","./src/app/services/api.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  constructor(private apiService: ApiService, private router: Router, private authService: AuthService) { }\r\n\r\n  username!: string;\r\n  password!: string;\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogin() {\r\n    this.apiService.login(this.username, this.password).subscribe(\r\n      (response) => {\r\n        // Manejar la respuesta de la API (por ejemplo, redireccionar a otra página)\r\n        console.log('Respuesta de la API:', response);\r\n        localStorage.setItem('currentUser', JSON.stringify(response));\r\n        const currentUserString = localStorage.getItem('currentUser');\r\n        if (currentUserString !== null) {\r\n          this.authService.setCurrentUser(JSON.parse(currentUserString));\r\n          this.authService.setLoggedIn(true);\r\n        }\r\n        this.router.navigate(['/']);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        if (error.status === 401) {\r\n          this.router.navigate(['/login']); // Redirige al login en caso de error 401\r\n        } else {\r\n          console.error('Error al iniciar sesión:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<ion-content color=\"light\" class=\"ion-padding\">\r\n <br>\r\n      <ion-icon size=\"large\" name=\"arrow-back\" routerLink=\"/\"></ion-icon>\r\n  <br>\r\n      <h2 size=\"large\"><b>Iniciar sesión</b></h2>\r\n\r\n  <form (ngSubmit)=\"onLogin()\">\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label position=\"stacked\">Boleta*</ion-label>\r\n      <ion-input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required></ion-input>\r\n    </ion-item>\r\n    <ion-item color=\"light\" class=\"ion-no-padding\">\r\n      <ion-label position=\"stacked\">Contraseña*</ion-label>\r\n      <ion-input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required></ion-input>\r\n    </ion-item>\r\n    <br>\r\n    <ion-button color=\"dark\" shape=\"round\" expand=\"block\" type=\"submit\">\r\n      Iniciar sesion &nbsp;<ion-icon name=\"arrow-forward\"></ion-icon>\r\n    </ion-button>\r\n  </form>\r\n</ion-content>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Order, Product } from '../components/order-card/order-card.component';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private api = environment.api;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private toastController: ToastController,\r\n    private router:Router\r\n  ) { }\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\r\n    const token = currentUser && currentUser.token ? currentUser.token : ''; // Obtiene el token de localStorage\r\n\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` // Incluye el token en el encabezado Authorization\r\n    });\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const url = this.api + '/login';\r\n    const body = { boleta: username, password: password };\r\n    return this.http.post(url, body, { observe: 'response', withCredentials: true }) // Observa la respuesta completa\r\n      .pipe(\r\n        map((response: HttpResponse<any>) => response.body),\r\n        catchError(async error => {\r\n          console.error('Error en el inicio de sesión:', error);\r\n\r\n          // Muestra el mensaje de error en un toast\r\n          const toast = await this.toastController.create({\r\n            message: error.error,\r\n            duration: 2000,\r\n            position: 'top'\r\n          });\r\n          toast.present()\r\n\r\n          return throwError(() => new Error(error)); // Propaga el error para manejarlo en el componente\r\n        })\r\n      );\r\n  }\r\n\r\n  logout(): Observable<string> {\r\n    const url = this.api + '/login'; // Endpoint de cierre de sesión\r\n    return this.http.delete(url, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  verifySession(): Observable<any> {\r\n    const url = this.api + '/login/verify';\r\n    return this.http.get(url, { withCredentials: true }) // withCredentials: true para enviar cookies\r\n      .pipe(\r\n        map((response: any) => response),\r\n        catchError(error => {\r\n          if (error.status === 401) {\r\n            // Si no está autenticado, redirigir a la página de inicio de sesión\r\n            this.router.navigate(['/login']); // Redirige al login en caso de error 401\r\n            return of(null);\r\n          } else {\r\n            console.error('Error al verificar la sesión:', error);\r\n            return throwError(() => new Error(error));\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  products(): Observable<any>{\r\n    const url = this.api + '/products/data';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProducts(page: number): Observable<any[]> { // Método para obtener productos sin búsqueda\r\n    const params = new HttpParams().set('page', page.toString());\r\n    const url = this.api + '/products/data';\r\n    return this.http.get<any[]>(url, { params });\r\n  }\r\n\r\n  searchProducts(page: number, query: string): Observable<any[]> { // Método para buscar productos\r\n    const params = new HttpParams().set('page', page.toString()).set('query', query);\r\n    const url = this.api + '/products/search';\r\n    return this.http.get<any[]>(url, { params });\r\n  }\r\n\r\n  \r\n  productDetails(id: string): Observable<any>{\r\n    const url = this.api + '/products/data/' + id;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  register(jsonData: any): Observable<string> {\r\n    const url = this.api + '/verify/registration';\r\n    return this.http.post(url, jsonData, { headers: this.getHeaders(), observe: 'response', responseType: 'text' }) // Incluye los encabezados\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  createOrder(orderData: any): Observable<string> {\r\n    const url = this.api + '/pedidos';\r\n    return this.http.post(url, orderData, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true }) // Incluye los encabezados\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    const url = this.api + '/pedidos';\r\n    return this.http.get<Order[]>(url, { withCredentials: true }); \r\n  }\r\n\r\n  getSales(): Observable<Order[]> {\r\n    const url = this.api + '/pedidos/sales';\r\n    return this.http.get<Order[]>(url, { withCredentials: true });\r\n  }\r\n\r\n  getInventory(): Observable<any[]> {\r\n    const url = this.api + '/products/seller/data';\r\n    return this.http.get<Product[]>(url, { withCredentials: true });\r\n  }\r\n\r\n  updateOrderStatus(orderId: string, productId: number, newStatus: string): Observable<string> {\r\n    const url = this.api + `/pedidos/${orderId}`; // URL con el ID del pedido\r\n    const body = { estado: newStatus, id_producto: productId }; // Datos en formato JSON\r\n\r\n    return this.http.patch(url, body, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProduct(productId: number, formData: FormData): Observable<any> {\r\n    const url = this.api + `/products/seller/data/${productId}`;\r\n    return this.http.patch(url, formData, { observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  createProduct(formData: FormData): Observable<any> {\r\n    const url = this.api + `/products/seller`;\r\n    return this.http.post(url, formData, { observe: 'response', responseType: 'text', withCredentials: true })\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteProduct(productId: number): Observable<any> {\r\n    const url = this.api + `/products/seller/${productId}`;\r\n    return this.http.delete(url, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProductAvailability(productId: number, availability: boolean): Observable<any> {\r\n    const url = this.api + `/products/seller/avail/${productId}`;\r\n    return this.http.patch(url, { disponibilidad: availability }, { headers: this.getHeaders(), observe: 'response', responseType: 'text', withCredentials: true})\r\n      .pipe(\r\n        map((response: HttpResponse<string>) => {\r\n          return response.body || '';\r\n        })\r\n      );\r\n  }\r\n\r\n  getProductImage(image: string | null, placeholder: boolean): string {\r\n    const backend_url = this.api + `/images/products/${image}`;\r\n    const generic_url_seed ='https://picsum.photos/seed';\r\n    const generic_url = 'https://picsum.photos/256'\r\n\r\n    if (image && !placeholder) {\r\n      return backend_url;\r\n    } else if (placeholder) {\r\n      return `${generic_url_seed}/${image}/256`;\r\n    } else {\r\n      return generic_url;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}"],"names":["RouterModule","LoginPage","routes","path","component","LoginPageRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","IonicModule","LoginPageModule","declarations","constructor","apiService","router","authService","ngOnInit","onLogin","login","username","password","subscribe","response","console","log","localStorage","setItem","JSON","stringify","currentUserString","getItem","setCurrentUser","parse","setLoggedIn","navigate","error","status","i0","ɵɵdirectiveInject","ApiService","i2","Router","i3","AuthService","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginPage_Template_form_ngSubmit_7_listener","ɵɵtwoWayListener","LoginPage_Template_ion_input_ngModelChange_11_listener","$event","ɵɵtwoWayBindingSet","LoginPage_Template_ion_input_ngModelChange_15_listener","ɵɵadvance","ɵɵtwoWayProperty","HttpHeaders","HttpParams","of","throwError","catchError","map","environment","http","toastController","api","getHeaders","currentUser","token","_this","url","body","boleta","post","observe","withCredentials","pipe","_ref","_asyncToGenerator","toast","create","message","duration","position","present","Error","_x","apply","arguments","logout","delete","headers","responseType","verifySession","get","products","getProducts","page","params","set","toString","searchProducts","query","productDetails","id","register","jsonData","createOrder","orderData","getOrders","getSales","getInventory","updateOrderStatus","orderId","productId","newStatus","estado","id_producto","patch","updateProduct","formData","createProduct","deleteProduct","updateProductAvailability","availability","disponibilidad","getProductImage","image","placeholder","backend_url","generic_url_seed","generic_url","ɵɵinject","HttpClient","ToastController","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}